// Generated by purs bundle 0.14.7
var PS = {};
(function(exports) {
  "use strict";

  var refEq = function (r1) {
    return function (r2) {
      return r1 === r2;
    };
  };

  exports.eqBooleanImpl = refEq;
  exports.eqNumberImpl = refEq;
  exports.eqStringImpl = refEq;

  exports.eqArrayImpl = function (f) {
    return function (xs) {
      return function (ys) {
        if (xs.length !== ys.length) return false;
        for (var i = 0; i < xs.length; i++) {
          if (!f(xs[i])(ys[i])) return false;
        }
        return true;
      };
    };
  };
})(PS["Data.Eq"] = PS["Data.Eq"] || {});
(function($PS) {
  // Generated by purs version 0.14.7
  "use strict";
  $PS["Data.Symbol"] = $PS["Data.Symbol"] || {};
  var exports = $PS["Data.Symbol"];
  var reflectSymbol = function (dict) {
      return dict.reflectSymbol;
  };
  exports["reflectSymbol"] = reflectSymbol;
})(PS);
(function(exports) {
  "use strict";

  exports.unsafeGet = function (label) {
    return function (rec) {
      return rec[label];
    };
  };
})(PS["Record.Unsafe"] = PS["Record.Unsafe"] || {});
(function($PS) {
  // Generated by purs version 0.14.7
  "use strict";
  $PS["Record.Unsafe"] = $PS["Record.Unsafe"] || {};
  var exports = $PS["Record.Unsafe"];
  var $foreign = $PS["Record.Unsafe"];
  exports["unsafeGet"] = $foreign.unsafeGet;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.7
  "use strict";
  $PS["Type.Proxy"] = $PS["Type.Proxy"] || {};
  var exports = $PS["Type.Proxy"];
  var $$Proxy = (function () {
      function $$Proxy() {

      };
      $$Proxy.value = new $$Proxy();
      return $$Proxy;
  })();
  exports["Proxy"] = $$Proxy;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.7
  "use strict";
  $PS["Data.Eq"] = $PS["Data.Eq"] || {};
  var exports = $PS["Data.Eq"];
  var $foreign = $PS["Data.Eq"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Record_Unsafe = $PS["Record.Unsafe"];
  var Type_Proxy = $PS["Type.Proxy"];
  var eqString = {
      eq: $foreign.eqStringImpl
  };
  var eqRowNil = {
      eqRecord: function (v) {
          return function (v1) {
              return function (v2) {
                  return true;
              };
          };
      }
  };
  var eqRecord = function (dict) {
      return dict.eqRecord;
  };
  var eqRec = function () {
      return function (dictEqRecord) {
          return {
              eq: eqRecord(dictEqRecord)(Type_Proxy["Proxy"].value)
          };
      };
  };
  var eqNumber = {
      eq: $foreign.eqNumberImpl
  };
  var eqBoolean = {
      eq: $foreign.eqBooleanImpl
  };
  var eq = function (dict) {
      return dict.eq;
  };
  var eqArray = function (dictEq) {
      return {
          eq: $foreign.eqArrayImpl(eq(dictEq))
      };
  };
  var eqRowCons = function (dictEqRecord) {
      return function () {
          return function (dictIsSymbol) {
              return function (dictEq) {
                  return {
                      eqRecord: function (v) {
                          return function (ra) {
                              return function (rb) {
                                  var tail = eqRecord(dictEqRecord)(Type_Proxy["Proxy"].value)(ra)(rb);
                                  var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy["Proxy"].value);
                                  var get = Record_Unsafe.unsafeGet(key);
                                  return eq(dictEq)(get(ra))(get(rb)) && tail;
                              };
                          };
                      }
                  };
              };
          };
      };
  };
  exports["eq"] = eq;
  exports["eqBoolean"] = eqBoolean;
  exports["eqNumber"] = eqNumber;
  exports["eqString"] = eqString;
  exports["eqArray"] = eqArray;
  exports["eqRec"] = eqRec;
  exports["eqRowNil"] = eqRowNil;
  exports["eqRowCons"] = eqRowCons;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.7
  "use strict";
  $PS["Common"] = $PS["Common"] || {};
  var exports = $PS["Common"];
  var Data_Eq = $PS["Data.Eq"];                
  var PageWidgets = (function () {
      function PageWidgets() {

      };
      PageWidgets.value = new PageWidgets();
      return PageWidgets;
  })();
  var PageUrl = (function () {
      function PageUrl(value0) {
          this.value0 = value0;
      };
      PageUrl.create = function (value0) {
          return new PageUrl(value0);
      };
      return PageUrl;
  })();
  var eqPageType = {
      eq: function (x) {
          return function (y) {
              if (x instanceof PageWidgets && y instanceof PageWidgets) {
                  return true;
              };
              if (x instanceof PageUrl && y instanceof PageUrl) {
                  return x.value0.addr === y.value0.addr;
              };
              return false;
          };
      }
  };
  var eqFieldNode = {
      eq: function (x) {
          return function (y) {
              return Data_Eq.eq(Data_Eq.eqArray(eqFieldNode))(x.forest)(y.forest) && x.root === y.root;
          };
      }
  };
  exports["PageWidgets"] = PageWidgets;
  exports["PageUrl"] = PageUrl;
  exports["eqPageType"] = eqPageType;
  exports["eqFieldNode"] = eqFieldNode;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.7
  "use strict";
  $PS["Control.Applicative"] = $PS["Control.Applicative"] || {};
  var exports = $PS["Control.Applicative"];          
  var pure = function (dict) {
      return dict.pure;
  };
  exports["pure"] = pure;
})(PS);
(function(exports) {
  "use strict";

  exports.arrayApply = function (fs) {
    return function (xs) {
      var l = fs.length;
      var k = xs.length;
      var result = new Array(l*k);
      var n = 0;
      for (var i = 0; i < l; i++) {
        var f = fs[i];
        for (var j = 0; j < k; j++) {
          result[n++] = f(xs[j]);
        }
      }
      return result;
    };
  };
})(PS["Control.Apply"] = PS["Control.Apply"] || {});
(function(exports) {
  "use strict";

  exports.arrayMap = function (f) {
    return function (arr) {
      var l = arr.length;
      var result = new Array(l);
      for (var i = 0; i < l; i++) {
        result[i] = f(arr[i]);
      }
      return result;
    };
  };
})(PS["Data.Functor"] = PS["Data.Functor"] || {});
(function($PS) {
  // Generated by purs version 0.14.7
  "use strict";
  $PS["Data.Functor"] = $PS["Data.Functor"] || {};
  var exports = $PS["Data.Functor"];
  var $foreign = $PS["Data.Functor"];                
  var map = function (dict) {
      return dict.map;
  };
  var functorArray = {
      map: $foreign.arrayMap
  };
  exports["map"] = map;
  exports["functorArray"] = functorArray;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.7
  "use strict";
  $PS["Control.Apply"] = $PS["Control.Apply"] || {};
  var exports = $PS["Control.Apply"];
  var $foreign = $PS["Control.Apply"];
  var Data_Functor = $PS["Data.Functor"];
  var applyArray = {
      apply: $foreign.arrayApply,
      Functor0: function () {
          return Data_Functor.functorArray;
      }
  };
  exports["applyArray"] = applyArray;
})(PS);
(function(exports) {
  "use strict";

  exports.arrayBind = function (arr) {
    return function (f) {
      var result = [];
      for (var i = 0, l = arr.length; i < l; i++) {
        Array.prototype.push.apply(result, f(arr[i]));
      }
      return result;
    };
  };
})(PS["Control.Bind"] = PS["Control.Bind"] || {});
(function($PS) {
  // Generated by purs version 0.14.7
  "use strict";
  $PS["Control.Bind"] = $PS["Control.Bind"] || {};
  var exports = $PS["Control.Bind"];
  var $foreign = $PS["Control.Bind"];
  var Control_Apply = $PS["Control.Apply"];
  var bindArray = {
      bind: $foreign.arrayBind,
      Apply0: function () {
          return Control_Apply.applyArray;
      }
  };
  var bind = function (dict) {
      return dict.bind;
  };
  exports["bind"] = bind;
  exports["bindArray"] = bindArray;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.7
  "use strict";
  $PS["Control.Semigroupoid"] = $PS["Control.Semigroupoid"] || {};
  var exports = $PS["Control.Semigroupoid"];
  var semigroupoidFn = {
      compose: function (f) {
          return function (g) {
              return function (x) {
                  return f(g(x));
              };
          };
      }
  };
  exports["semigroupoidFn"] = semigroupoidFn;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.7
  "use strict";
  $PS["Control.Category"] = $PS["Control.Category"] || {};
  var exports = $PS["Control.Category"];
  var Control_Semigroupoid = $PS["Control.Semigroupoid"];                
  var identity = function (dict) {
      return dict.identity;
  };
  var categoryFn = {
      identity: function (x) {
          return x;
      },
      Semigroupoid0: function () {
          return Control_Semigroupoid.semigroupoidFn;
      }
  };
  exports["identity"] = identity;
  exports["categoryFn"] = categoryFn;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.7
  "use strict";
  $PS["Data.Either"] = $PS["Data.Either"] || {};
  var exports = $PS["Data.Either"];
  var Data_Functor = $PS["Data.Functor"];          
  var Left = (function () {
      function Left(value0) {
          this.value0 = value0;
      };
      Left.create = function (value0) {
          return new Left(value0);
      };
      return Left;
  })();
  var Right = (function () {
      function Right(value0) {
          this.value0 = value0;
      };
      Right.create = function (value0) {
          return new Right(value0);
      };
      return Right;
  })();
  var functorEither = {
      map: function (f) {
          return function (m) {
              if (m instanceof Left) {
                  return new Left(m.value0);
              };
              if (m instanceof Right) {
                  return new Right(f(m.value0));
              };
              throw new Error("Failed pattern match at Data.Either (line 31, column 1 - line 31, column 52): " + [ m.constructor.name ]);
          };
      }
  };
  var either = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Left) {
                  return v(v2.value0);
              };
              if (v2 instanceof Right) {
                  return v1(v2.value0);
              };
              throw new Error("Failed pattern match at Data.Either (line 208, column 1 - line 208, column 64): " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  };
  var applyEither = {
      apply: function (v) {
          return function (v1) {
              if (v instanceof Left) {
                  return new Left(v.value0);
              };
              if (v instanceof Right) {
                  return Data_Functor.map(functorEither)(v.value0)(v1);
              };
              throw new Error("Failed pattern match at Data.Either (line 70, column 1 - line 72, column 30): " + [ v.constructor.name, v1.constructor.name ]);
          };
      },
      Functor0: function () {
          return functorEither;
      }
  };
  var bindEither = {
      bind: either(function (e) {
          return function (v) {
              return new Left(e);
          };
      })(function (a) {
          return function (f) {
              return f(a);
          };
      }),
      Apply0: function () {
          return applyEither;
      }
  };
  var applicativeEither = {
      pure: Right.create,
      Apply0: function () {
          return applyEither;
      }
  };
  var monadEither = {
      Applicative0: function () {
          return applicativeEither;
      },
      Bind1: function () {
          return bindEither;
      }
  };
  exports["Left"] = Left;
  exports["Right"] = Right;
  exports["functorEither"] = functorEither;
  exports["applicativeEither"] = applicativeEither;
  exports["bindEither"] = bindEither;
  exports["monadEither"] = monadEither;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.7
  "use strict";
  $PS["Control.Monad.Rec.Class"] = $PS["Control.Monad.Rec.Class"] || {};
  var exports = $PS["Control.Monad.Rec.Class"];
  var Data_Either = $PS["Data.Either"];              
  var Loop = (function () {
      function Loop(value0) {
          this.value0 = value0;
      };
      Loop.create = function (value0) {
          return new Loop(value0);
      };
      return Loop;
  })();
  var Done = (function () {
      function Done(value0) {
          this.value0 = value0;
      };
      Done.create = function (value0) {
          return new Done(value0);
      };
      return Done;
  })();
  var tailRecM = function (dict) {
      return dict.tailRecM;
  };
  var tailRecM3 = function (dictMonadRec) {
      return function (f) {
          return function (a) {
              return function (b) {
                  return function (c) {
                      return tailRecM(dictMonadRec)(function (o) {
                          return f(o.a)(o.b)(o.c);
                      })({
                          a: a,
                          b: b,
                          c: c
                      });
                  };
              };
          };
      };
  };
  var tailRec = function (f) {
      var go = function ($copy_v) {
          var $tco_done = false;
          var $tco_result;
          function $tco_loop(v) {
              if (v instanceof Loop) {
                  $copy_v = f(v.value0);
                  return;
              };
              if (v instanceof Done) {
                  $tco_done = true;
                  return v.value0;
              };
              throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 93, column 3 - line 93, column 25): " + [ v.constructor.name ]);
          };
          while (!$tco_done) {
              $tco_result = $tco_loop($copy_v);
          };
          return $tco_result;
      };
      return function ($55) {
          return go(f($55));
      };
  };
  var monadRecEither = {
      tailRecM: function (f) {
          return function (a0) {
              var g = function (v) {
                  if (v instanceof Data_Either.Left) {
                      return new Done(new Data_Either.Left(v.value0));
                  };
                  if (v instanceof Data_Either.Right && v.value0 instanceof Loop) {
                      return new Loop(f(v.value0.value0));
                  };
                  if (v instanceof Data_Either.Right && v.value0 instanceof Done) {
                      return new Done(new Data_Either.Right(v.value0.value0));
                  };
                  throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 121, column 7 - line 121, column 33): " + [ v.constructor.name ]);
              };
              return tailRec(g)(f(a0));
          };
      },
      Monad0: function () {
          return Data_Either.monadEither;
      }
  };
  exports["Loop"] = Loop;
  exports["Done"] = Done;
  exports["tailRecM3"] = tailRecM3;
  exports["monadRecEither"] = monadRecEither;
})(PS);
(function(exports) {
  "use strict";

  exports.pushAll = function (as) {
    return function (xs) {
      return function () {
        return xs.push.apply(xs, as);
      };
    };
  };

  exports.unsafeFreeze = function (xs) {
    return function () {
      return xs;
    };
  };

  function copyImpl(xs) {
    return function () {
      return xs.slice();
    };
  }                         

  exports.thaw = copyImpl;
})(PS["Data.Array.ST"] = PS["Data.Array.ST"] || {});
(function($PS) {
  // Generated by purs version 0.14.7
  "use strict";
  $PS["Data.Array.ST"] = $PS["Data.Array.ST"] || {};
  var exports = $PS["Data.Array.ST"];
  var $foreign = $PS["Data.Array.ST"];                     
  var withArray = function (f) {
      return function (xs) {
          return function __do() {
              var result = $foreign.thaw(xs)();
              f(result)();
              return $foreign.unsafeFreeze(result)();
          };
      };
  };
  var push = function (a) {
      return $foreign.pushAll([ a ]);
  };
  exports["withArray"] = withArray;
  exports["push"] = push;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.7
  "use strict";
  $PS["Data.Function"] = $PS["Data.Function"] || {};
  var exports = $PS["Data.Function"];
  var flip = function (f) {
      return function (b) {
          return function (a) {
              return f(a)(b);
          };
      };
  };
  exports["flip"] = flip;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.7
  "use strict";
  $PS["Data.Array"] = $PS["Data.Array"] || {};
  var exports = $PS["Data.Array"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Array_ST = $PS["Data.Array.ST"];
  var Data_Function = $PS["Data.Function"];
  var snoc = function (xs) {
      return function (x) {
          return Data_Array_ST.withArray(Data_Array_ST.push(x))(xs)();
      };
  };
  var concatMap = Data_Function.flip(Control_Bind.bind(Control_Bind.bindArray));
  exports["snoc"] = snoc;
  exports["concatMap"] = concatMap;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.7
  "use strict";
  $PS["Data.Bifunctor"] = $PS["Data.Bifunctor"] || {};
  var exports = $PS["Data.Bifunctor"];
  var Control_Category = $PS["Control.Category"];
  var Data_Either = $PS["Data.Either"];              
  var bimap = function (dict) {
      return dict.bimap;
  };
  var lmap = function (dictBifunctor) {
      return function (f) {
          return bimap(dictBifunctor)(f)(Control_Category.identity(Control_Category.categoryFn));
      };
  };
  var bifunctorEither = {
      bimap: function (v) {
          return function (v1) {
              return function (v2) {
                  if (v2 instanceof Data_Either.Left) {
                      return new Data_Either.Left(v(v2.value0));
                  };
                  if (v2 instanceof Data_Either.Right) {
                      return new Data_Either.Right(v1(v2.value0));
                  };
                  throw new Error("Failed pattern match at Data.Bifunctor (line 32, column 1 - line 34, column 36): " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
              };
          };
      }
  };
  exports["lmap"] = lmap;
  exports["bifunctorEither"] = bifunctorEither;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.7
  "use strict";
  $PS["Data.Maybe"] = $PS["Data.Maybe"] || {};
  var exports = $PS["Data.Maybe"];
  var Control_Category = $PS["Control.Category"];
  var Data_Eq = $PS["Data.Eq"];                    
  var Nothing = (function () {
      function Nothing() {

      };
      Nothing.value = new Nothing();
      return Nothing;
  })();
  var Just = (function () {
      function Just(value0) {
          this.value0 = value0;
      };
      Just.create = function (value0) {
          return new Just(value0);
      };
      return Just;
  })();
  var maybe = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Nothing) {
                  return v;
              };
              if (v2 instanceof Just) {
                  return v1(v2.value0);
              };
              throw new Error("Failed pattern match at Data.Maybe (line 230, column 1 - line 230, column 51): " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  };
  var functorMaybe = {
      map: function (v) {
          return function (v1) {
              if (v1 instanceof Just) {
                  return new Just(v(v1.value0));
              };
              return Nothing.value;
          };
      }
  };
  var fromMaybe = function (a) {
      return maybe(a)(Control_Category.identity(Control_Category.categoryFn));
  };
  var eqMaybe = function (dictEq) {
      return {
          eq: function (x) {
              return function (y) {
                  if (x instanceof Nothing && y instanceof Nothing) {
                      return true;
                  };
                  if (x instanceof Just && y instanceof Just) {
                      return Data_Eq.eq(dictEq)(x.value0)(y.value0);
                  };
                  return false;
              };
          }
      };
  };
  exports["Nothing"] = Nothing;
  exports["Just"] = Just;
  exports["fromMaybe"] = fromMaybe;
  exports["functorMaybe"] = functorMaybe;
  exports["eqMaybe"] = eqMaybe;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.7
  "use strict";
  $PS["Data.Tuple"] = $PS["Data.Tuple"] || {};
  var exports = $PS["Data.Tuple"];
  var Data_Eq = $PS["Data.Eq"];                    
  var Tuple = (function () {
      function Tuple(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Tuple.create = function (value0) {
          return function (value1) {
              return new Tuple(value0, value1);
          };
      };
      return Tuple;
  })();
  var eqTuple = function (dictEq) {
      return function (dictEq1) {
          return {
              eq: function (x) {
                  return function (y) {
                      return Data_Eq.eq(dictEq)(x.value0)(y.value0) && Data_Eq.eq(dictEq1)(x.value1)(y.value1);
                  };
              }
          };
      };
  };
  exports["Tuple"] = Tuple;
  exports["eqTuple"] = eqTuple;
})(PS);
(function(exports) {
  "use strict";

  exports.unit = {};
})(PS["Data.Unit"] = PS["Data.Unit"] || {});
(function($PS) {
  // Generated by purs version 0.14.7
  "use strict";
  $PS["Data.Unit"] = $PS["Data.Unit"] || {};
  var exports = $PS["Data.Unit"];
  var $foreign = $PS["Data.Unit"];
  exports["unit"] = $foreign.unit;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.7
  "use strict";
  $PS["DefaultSpec.Common"] = $PS["DefaultSpec.Common"] || {};
  var exports = $PS["DefaultSpec.Common"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Maybe = $PS["Data.Maybe"];
  var eqRecursiveT2 = {
      eq: function (x) {
          return function (y) {
              return x.b1 === y.b1 && x.b2 === y.b2 && Data_Eq.eq(Data_Maybe.eqMaybe(eqRecursiveT2))(x.x)(y.x);
          };
      }
  };
  var eqRecursiveT1 = {
      eq: function (x) {
          return function (y) {
              return x.b1 === y.b1 && x.b2 === y.b2 && Data_Eq.eq(eqRecursiveT1)(x.x)(y.x);
          };
      }
  };
  exports["eqRecursiveT1"] = eqRecursiveT1;
  exports["eqRecursiveT2"] = eqRecursiveT2;
})(PS);
(function(exports) {
  "use strict"

  exports.splitFloat64 = value => {
    var FLOAT64_MAX = 1.7976931348623157e+308
    var FLOAT64_MIN = 2.2250738585072014e-308
    var TWO_TO_20 = 1048576
    var TWO_TO_32 = 4294967296
    var TWO_TO_52 = 4503599627370496
    var sign = (value < 0) ? 1 : 0
    value = sign ? -value : value

    // Handle zeros.
    if (value === 0) {
      if ((1 / value) > 0) {
        // Positive zero.
        return { low: 0x00000000, high: 0x00000000 }
      } else {
        // Negative zero.
        return { low: 0x00000000, high: 0x80000000 }
      }
    }

    // Handle nans.
    if (isNaN(value)) {
      return { low: 0xFFFFFFFF, high: 0x7FFFFFFF }
    }

    // Handle infinities.
    if (value > FLOAT64_MAX) {
      return { low: 0, high: ((sign << 31) | (0x7FF00000)) >>> 0 }
    }

    // Handle denormals.
    if (value < FLOAT64_MIN) {
      // Number is a denormal.
      var mant = value / Math.pow(2, -1074)
      var mantHigh = (mant / TWO_TO_32)
      return { low: (mant >>> 0), high: ((sign << 31) | mantHigh) >>> 0 }
    }

    var exp = Math.floor(Math.log(value) / Math.LN2)
    if (exp == 1024) exp = 1023
    var mant = value * Math.pow(2, -exp)

    var mantHigh = (mant * TWO_TO_20) & 0xFFFFF
    var mantLow = (mant * TWO_TO_52) >>> 0

    return { low: mantLow, high: ((sign << 31) | ((exp + 1023) << 20) | mantHigh) >>> 0 }
  }
})(PS["Proto.Encode"] = PS["Proto.Encode"] || {});
(function(exports) {
  "use strict"

  exports.length = xs => xs.length

  exports.indexUnsafe = xs => i => xs[i]

  exports.slice = xs => start => end => xs.slice(start, end)

  exports.fromArray = xs => new Uint8Array(xs)

  exports.concatAll = xs => {
    const zs = new Uint8Array(xs.reduce((acc, x) => acc + x.length, 0))
    xs.reduce((acc, x) => {
      zs.set(x, acc)
      return acc + x.length
    }, 0)
    return zs
  }

  exports.eqImpl = xs => ys => (xs === ys) || (xs.length === ys.length && xs.every((x,i) => x === ys[i]))
})(PS["Proto.Uint8Array"] = PS["Proto.Uint8Array"] || {});
(function($PS) {
  // Generated by purs version 0.14.7
  "use strict";
  $PS["Proto.Uint8Array"] = $PS["Proto.Uint8Array"] || {};
  var exports = $PS["Proto.Uint8Array"];
  var $foreign = $PS["Proto.Uint8Array"];
  var Data_Either = $PS["Data.Either"];   
  var index = function (xs) {
      return function (pos) {
          var len = $foreign.length(xs);
          var $0 = 0 <= pos && pos < len;
          if ($0) {
              return new Data_Either.Right($foreign.indexUnsafe(xs)(pos));
          };
          return new Data_Either.Left({
              pos: pos,
              len: len
          });
      };
  };
  var eqUint8Array = {
      eq: $foreign.eqImpl
  };
  exports["index"] = index;
  exports["eqUint8Array"] = eqUint8Array;
  exports["length"] = $foreign.length;
  exports["slice"] = $foreign.slice;
  exports["concatAll"] = $foreign.concatAll;
  exports["fromArray"] = $foreign.fromArray;
})(PS);
(function(exports) {
  "use strict"

  exports.numOfBytes = function(string) {
    var len = 0,
        c = 0
    for (var i = 0; i < string.length; ++i) {
      c = string.charCodeAt(i)
      if (c < 128)
        len += 1
      else if (c < 2048)
        len += 2
      else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {
        ++i
        len += 4
      } else
        len += 3
    }
    return len
  }

  exports.toString = function(buffer) {
    var start = 0
    var end = buffer.length
    var len = end - start
    if (len < 1)
      return ""
    var parts = null,
      chunk = [],
      i = 0, // char offset
      t     // temporary
    while (start < end) {
      t = buffer[start++]
      if (t < 128)
        chunk[i++] = t
      else if (t > 191 && t < 224)
        chunk[i++] = (t & 31) << 6 | buffer[start++] & 63
      else if (t > 239 && t < 365) {
        t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000
        chunk[i++] = 0xD800 + (t >> 10)
        chunk[i++] = 0xDC00 + (t & 1023)
      } else
        chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63
      if (i > 8191) {
        (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk))
        i = 0
      }
    }
    if (parts) {
      if (i)
        parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)))
      return parts.join("")
    }
    return String.fromCharCode.apply(String, chunk.slice(0, i))
  }

  exports.toUint8Array = function(string) {
    return function(len) {
      var buffer = new Uint8Array(len)
      var offset = 0
      var c1, // character 1
          c2 // character 2
      for (var i = 0; i < string.length; ++i) {
        c1 = string.charCodeAt(i)
        if (c1 < 128) {
          buffer[offset++] = c1
        } else if (c1 < 2048) {
          buffer[offset++] = c1 >> 6       | 192
          buffer[offset++] = c1       & 63 | 128
        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {
          c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF)
          ++i
          buffer[offset++] = c1 >> 18      | 240
          buffer[offset++] = c1 >> 12 & 63 | 128
          buffer[offset++] = c1 >> 6  & 63 | 128
          buffer[offset++] = c1       & 63 | 128
        } else {
          buffer[offset++] = c1 >> 12      | 224
          buffer[offset++] = c1 >> 6  & 63 | 128
          buffer[offset++] = c1       & 63 | 128
        }
      }
      return buffer
    }
  }
})(PS["Proto.Utf8"] = PS["Proto.Utf8"] || {});
(function($PS) {
  // Generated by purs version 0.14.7
  "use strict";
  $PS["Proto.Utf8"] = $PS["Proto.Utf8"] || {};
  var exports = $PS["Proto.Utf8"];
  var $foreign = $PS["Proto.Utf8"];
  exports["numOfBytes"] = $foreign.numOfBytes;
  exports["toString"] = $foreign.toString;
  exports["toUint8Array"] = $foreign.toUint8Array;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.7
  "use strict";
  $PS["Proto.Encode"] = $PS["Proto.Encode"] || {};
  var exports = $PS["Proto.Encode"];
  var $foreign = $PS["Proto.Encode"];
  var Data_Array = $PS["Data.Array"];
  var Proto_Uint8Array = $PS["Proto.Uint8Array"];
  var Proto_Utf8 = $PS["Proto.Utf8"];                
  var unsignedVarint32 = (function () {
      var loop = function ($copy_acc) {
          return function ($copy_val) {
              var $tco_var_acc = $copy_acc;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(acc, val) {
                  var $1 = val > 127;
                  if ($1) {
                      $tco_var_acc = Data_Array.snoc(acc)(val & 127 | 128);
                      $copy_val = val >>> 7;
                      return;
                  };
                  $tco_done = true;
                  return Data_Array.snoc(acc)(val);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($tco_var_acc, $copy_val);
              };
              return $tco_result;
          };
      };
      var $9 = loop([  ]);
      return function ($10) {
          return Proto_Uint8Array.fromArray($9($10));
      };
  })();
  var string = function (x) {
      var len = Proto_Utf8.numOfBytes(x);
      var $2 = len === 0;
      if ($2) {
          return unsignedVarint32(0);
      };
      return Proto_Uint8Array.concatAll([ unsignedVarint32(len), Proto_Utf8.toUint8Array(x)(len) ]);
  };
  var $$double = function (y) {
      var fixedUint32 = function (x) {
          return Proto_Uint8Array.fromArray([ x >>> 0 & 255, x >>> 8 & 255, x >>> 16 & 255, x >>> 24 & 255 ]);
      };
      var x = $foreign.splitFloat64(y);
      return Proto_Uint8Array.concatAll([ fixedUint32(x.low), fixedUint32(x.high) ]);
  };
  var bytes = function (xs) {
      var len = Proto_Uint8Array.length(xs);
      var $7 = len === 0;
      if ($7) {
          return unsignedVarint32(0);
      };
      return Proto_Uint8Array.concatAll([ unsignedVarint32(len), xs ]);
  };
  var $$boolean = function (v) {
      if (v) {
          return Proto_Uint8Array.fromArray([ 1 ]);
      };
      if (!v) {
          return Proto_Uint8Array.fromArray([ 0 ]);
      };
      throw new Error("Failed pattern match at Proto.Encode (line 63, column 1 - line 63, column 33): " + [ v.constructor.name ]);
  };
  exports["unsignedVarint32"] = unsignedVarint32;
  exports["double"] = $$double;
  exports["string"] = string;
  exports["boolean"] = $$boolean;
  exports["bytes"] = bytes;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.7
  "use strict";
  $PS["DefaultSpec.Pull"] = $PS["DefaultSpec.Pull"] || {};
  var exports = $PS["DefaultSpec.Pull"];
  var Data_Array = $PS["Data.Array"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var DefaultSpec_Common = $PS["DefaultSpec.Common"];
  var Proto_Encode = $PS["Proto.Encode"];
  var Proto_Uint8Array = $PS["Proto.Uint8Array"];                
  var SimpleT1 = (function () {
      function SimpleT1(value0) {
          this.value0 = value0;
      };
      SimpleT1.create = function (value0) {
          return new SimpleT1(value0);
      };
      return SimpleT1;
  })();
  var SimpleT2 = (function () {
      function SimpleT2(value0) {
          this.value0 = value0;
      };
      SimpleT2.create = function (value0) {
          return new SimpleT2(value0);
      };
      return SimpleT2;
  })();
  var RecursiveT1$prime$prime = (function () {
      function RecursiveT1$prime$prime(value0) {
          this.value0 = value0;
      };
      RecursiveT1$prime$prime.create = function (value0) {
          return new RecursiveT1$prime$prime(value0);
      };
      return RecursiveT1$prime$prime;
  })();
  var RecursiveT2$prime$prime = (function () {
      function RecursiveT2$prime$prime(value0) {
          this.value0 = value0;
      };
      RecursiveT2$prime$prime.create = function (value0) {
          return new RecursiveT2$prime$prime(value0);
      };
      return RecursiveT2$prime$prime;
  })();
  var OneMaybe = (function () {
      function OneMaybe(value0) {
          this.value0 = value0;
      };
      OneMaybe.create = function (value0) {
          return new OneMaybe(value0);
      };
      return OneMaybe;
  })();
  var OneSeq = (function () {
      function OneSeq(value0) {
          this.value0 = value0;
      };
      OneSeq.create = function (value0) {
          return new OneSeq(value0);
      };
      return OneSeq;
  })();
  var eqPull = {
      eq: function (x) {
          return function (y) {
              if (x instanceof SimpleT1 && y instanceof SimpleT1) {
                  return x.value0.b1 === y.value0.b1 && x.value0.b2 === y.value0.b2 && Data_Eq.eq(Data_Maybe.eqMaybe(Data_Eq.eqBoolean))(x.value0.m1)(y.value0.m1);
              };
              if (x instanceof SimpleT2 && y instanceof SimpleT2) {
                  return x.value0.b0 === y.value0.b0 && x.value0.b1 === y.value0.b1 && x.value0.b2 === y.value0.b2;
              };
              if (x instanceof RecursiveT1$prime$prime && y instanceof RecursiveT1$prime$prime) {
                  return Data_Eq.eq(DefaultSpec_Common.eqRecursiveT1)(x.value0)(y.value0);
              };
              if (x instanceof RecursiveT2$prime$prime && y instanceof RecursiveT2$prime$prime) {
                  return Data_Eq.eq(DefaultSpec_Common.eqRecursiveT2)(x.value0)(y.value0);
              };
              if (x instanceof OneMaybe && y instanceof OneMaybe) {
                  return Data_Eq.eq(Data_Maybe.eqMaybe(Data_Eq.eqString))(x.value0.m1)(y.value0.m1);
              };
              if (x instanceof OneSeq && y instanceof OneSeq) {
                  return Data_Eq.eq(Data_Eq.eqArray(Data_Eq.eqString))(x.value0.xs)(y.value0.xs);
              };
              return false;
          };
      }
  };
  var encodeSimpleT2 = function (msg) {
      var xs = Proto_Uint8Array.concatAll([ Proto_Encode.unsignedVarint32(8), Proto_Encode["boolean"](msg.b0), Proto_Encode.unsignedVarint32(16), Proto_Encode["boolean"](msg.b1), Proto_Encode.unsignedVarint32(26), Proto_Encode.string(msg.b2) ]);
      return Proto_Uint8Array.concatAll([ Proto_Encode.unsignedVarint32(Proto_Uint8Array.length(xs)), xs ]);
  };
  var encodeSimpleT1 = function (msg) {
      var xs = Proto_Uint8Array.concatAll([ Data_Maybe.fromMaybe(Proto_Uint8Array.fromArray([  ]))(Data_Functor.map(Data_Maybe.functorMaybe)(function (x) {
          return Proto_Uint8Array.concatAll([ Proto_Encode.unsignedVarint32(8), Proto_Encode["boolean"](x) ]);
      })(msg.m1)), Proto_Encode.unsignedVarint32(16), Proto_Encode["boolean"](msg.b1), Proto_Encode.unsignedVarint32(26), Proto_Encode.string(msg.b2) ]);
      return Proto_Uint8Array.concatAll([ Proto_Encode.unsignedVarint32(Proto_Uint8Array.length(xs)), xs ]);
  };
  var encodeRecursiveT2 = function (v) {
      var xs = Proto_Uint8Array.concatAll([ Proto_Encode.unsignedVarint32(8), Proto_Encode["boolean"](v.b1), Proto_Encode.unsignedVarint32(18), Proto_Encode.string(v.b2), Data_Maybe.fromMaybe(Proto_Uint8Array.fromArray([  ]))(Data_Functor.map(Data_Maybe.functorMaybe)(function (x) {
          return Proto_Uint8Array.concatAll([ Proto_Encode.unsignedVarint32(26), encodeRecursiveT2(x) ]);
      })(v.x)) ]);
      return Proto_Uint8Array.concatAll([ Proto_Encode.unsignedVarint32(Proto_Uint8Array.length(xs)), xs ]);
  };
  var encodeRecursiveT1 = function (v) {
      var xs = Proto_Uint8Array.concatAll([ Proto_Encode.unsignedVarint32(8), Proto_Encode["boolean"](v.b1), Proto_Encode.unsignedVarint32(18), Proto_Encode.string(v.b2), Proto_Encode.unsignedVarint32(26), encodeRecursiveT1(v.x) ]);
      return Proto_Uint8Array.concatAll([ Proto_Encode.unsignedVarint32(Proto_Uint8Array.length(xs)), xs ]);
  };
  var encodeOneSeq = function (msg) {
      var xs = Proto_Uint8Array.concatAll([ Proto_Uint8Array.concatAll(Data_Array.concatMap(function (x) {
          return [ Proto_Encode.unsignedVarint32(10), Proto_Encode.string(x) ];
      })(msg.xs)) ]);
      return Proto_Uint8Array.concatAll([ Proto_Encode.unsignedVarint32(Proto_Uint8Array.length(xs)), xs ]);
  };
  var encodeOneMaybe = function (msg) {
      var xs = Proto_Uint8Array.concatAll([ Data_Maybe.fromMaybe(Proto_Uint8Array.fromArray([  ]))(Data_Functor.map(Data_Maybe.functorMaybe)(function (x) {
          return Proto_Uint8Array.concatAll([ Proto_Encode.unsignedVarint32(10), Proto_Encode.string(x) ]);
      })(msg.m1)) ]);
      return Proto_Uint8Array.concatAll([ Proto_Encode.unsignedVarint32(Proto_Uint8Array.length(xs)), xs ]);
  };
  var encodePull = function (v) {
      if (v instanceof SimpleT1) {
          return Proto_Uint8Array.concatAll([ Proto_Encode.unsignedVarint32(10), encodeSimpleT1(v.value0) ]);
      };
      if (v instanceof SimpleT2) {
          return Proto_Uint8Array.concatAll([ Proto_Encode.unsignedVarint32(18), encodeSimpleT2(v.value0) ]);
      };
      if (v instanceof RecursiveT1$prime$prime) {
          return Proto_Uint8Array.concatAll([ Proto_Encode.unsignedVarint32(26), encodeRecursiveT1(v.value0) ]);
      };
      if (v instanceof RecursiveT2$prime$prime) {
          return Proto_Uint8Array.concatAll([ Proto_Encode.unsignedVarint32(34), encodeRecursiveT2(v.value0) ]);
      };
      if (v instanceof OneMaybe) {
          return Proto_Uint8Array.concatAll([ Proto_Encode.unsignedVarint32(42), encodeOneMaybe(v.value0) ]);
      };
      if (v instanceof OneSeq) {
          return Proto_Uint8Array.concatAll([ Proto_Encode.unsignedVarint32(50), encodeOneSeq(v.value0) ]);
      };
      throw new Error("Failed pattern match at DefaultSpec.Pull (line 17, column 1 - line 17, column 33): " + [ v.constructor.name ]);
  };
  exports["SimpleT1"] = SimpleT1;
  exports["SimpleT2"] = SimpleT2;
  exports["RecursiveT1''"] = RecursiveT1$prime$prime;
  exports["RecursiveT2''"] = RecursiveT2$prime$prime;
  exports["OneMaybe"] = OneMaybe;
  exports["OneSeq"] = OneSeq;
  exports["encodePull"] = encodePull;
  exports["eqPull"] = eqPull;
})(PS);
(function(exports) {
  "use strict"

  exports.joinFloat64 = bitsLow => bitsHigh => {
    var TWO_TO_32 = 4294967296
    var TWO_TO_52 = 4503599627370496
    var sign = ((bitsHigh >> 31) * 2 + 1)
    var exp = (bitsHigh >>> 20) & 0x7FF
    var mant = TWO_TO_32 * (bitsHigh & 0xFFFFF) + bitsLow

    if (exp == 0x7FF) {
      if (mant) {
        return NaN
      } else {
        return sign * Infinity
      }
    }

    if (exp == 0) {
      // Denormal.
      return sign * Math.pow(2, -1074) * mant
    } else {
      return sign * Math.pow(2, exp - 1075) *
              (mant + TWO_TO_52)
    }
  }

  const joinUint64 = (bitsLow, bitsHigh) => {
    var TWO_TO_32 = 4294967296
    return bitsHigh * TWO_TO_32 + (bitsLow >>> 0);
  }
})(PS["Proto.Decode"] = PS["Proto.Decode"] || {});
(function($PS) {
  // Generated by purs version 0.14.7
  "use strict";
  $PS["Proto.Decode"] = $PS["Proto.Decode"] || {};
  var exports = $PS["Proto.Decode"];
  var $foreign = $PS["Proto.Decode"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Bifunctor = $PS["Data.Bifunctor"];
  var Data_Either = $PS["Data.Either"];
  var Data_Unit = $PS["Data.Unit"];
  var Proto_Uint8Array = $PS["Proto.Uint8Array"];
  var Proto_Utf8 = $PS["Proto.Utf8"];                
  var OutOfBound = (function () {
      function OutOfBound(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      OutOfBound.create = function (value0) {
          return function (value1) {
              return new OutOfBound(value0, value1);
          };
      };
      return OutOfBound;
  })();
  var BadWireType = (function () {
      function BadWireType(value0) {
          this.value0 = value0;
      };
      BadWireType.create = function (value0) {
          return new BadWireType(value0);
      };
      return BadWireType;
  })();
  var BadType = (function () {
      function BadType(value0) {
          this.value0 = value0;
      };
      BadType.create = function (value0) {
          return new BadType(value0);
      };
      return BadType;
  })();
  var MissingFields = (function () {
      function MissingFields(value0) {
          this.value0 = value0;
      };
      MissingFields.create = function (value0) {
          return new MissingFields(value0);
      };
      return MissingFields;
  })();
  var IntTooLong = (function () {
      function IntTooLong() {

      };
      IntTooLong.value = new IntTooLong();
      return IntTooLong;
  })();
  var skip = function (n) {
      return function (xs) {
          return function (pos0) {
              var len = Proto_Uint8Array.length(xs);
              var $14 = (pos0 + n | 0) > len;
              if ($14) {
                  return new Data_Either.Left(new OutOfBound(pos0 + n | 0, len));
              };
              return Control_Applicative.pure(Data_Either.applicativeEither)({
                  pos: pos0 + n | 0,
                  val: Data_Unit.unit
              });
          };
      };
  };
  var index = function (xs) {
      return function (pos) {
          return Data_Bifunctor.lmap(Data_Bifunctor.bifunctorEither)(function (x) {
              return new OutOfBound(x.pos, x.len);
          })(Proto_Uint8Array.index(xs)(pos));
      };
  };
  var skip$prime = function ($copy_xs) {
      return function ($copy_pos) {
          var $tco_var_xs = $copy_xs;
          var $tco_done = false;
          var $tco_result;
          function $tco_loop(xs, pos) {
              var v = index(xs)(pos);
              if (v instanceof Data_Either.Left) {
                  $tco_done = true;
                  return new Data_Either.Left(v.value0);
              };
              if (v instanceof Data_Either.Right && (v.value0 & 128) === 0) {
                  $tco_done = true;
                  return Control_Applicative.pure(Data_Either.applicativeEither)({
                      pos: pos + 1 | 0,
                      val: Data_Unit.unit
                  });
              };
              if (v instanceof Data_Either.Right) {
                  $tco_var_xs = xs;
                  $copy_pos = pos + 1 | 0;
                  return;
              };
              throw new Error("Failed pattern match at Proto.Decode (line 164, column 3 - line 167, column 32): " + [ v.constructor.name ]);
          };
          while (!$tco_done) {
              $tco_result = $tco_loop($tco_var_xs, $copy_pos);
          };
          return $tco_result;
      };
  };
  var unsignedVarint32 = function (xs) {
      return function (pos) {
          return Control_Bind.bind(Data_Either.bindEither)(index(xs)(pos))(function (x) {
              var val = x & 127;
              var $33 = x < 128;
              if ($33) {
                  return Control_Applicative.pure(Data_Either.applicativeEither)({
                      pos: pos + 1 | 0,
                      val: val
                  });
              };
              return Control_Bind.bind(Data_Either.bindEither)(index(xs)(pos + 1 | 0))(function (x1) {
                  var val1 = val | (x1 & 127) << 7;
                  var $34 = x1 < 128;
                  if ($34) {
                      return Control_Applicative.pure(Data_Either.applicativeEither)({
                          pos: pos + 2 | 0,
                          val: val1
                      });
                  };
                  return Control_Bind.bind(Data_Either.bindEither)(index(xs)(pos + 2 | 0))(function (x2) {
                      var val2 = val1 | (x2 & 127) << 14;
                      var $35 = x2 < 128;
                      if ($35) {
                          return Control_Applicative.pure(Data_Either.applicativeEither)({
                              pos: pos + 3 | 0,
                              val: val2
                          });
                      };
                      return Control_Bind.bind(Data_Either.bindEither)(index(xs)(pos + 3 | 0))(function (x3) {
                          var val3 = val2 | (x3 & 127) << 21;
                          var $36 = x3 < 128;
                          if ($36) {
                              return Control_Applicative.pure(Data_Either.applicativeEither)({
                                  pos: pos + 4 | 0,
                                  val: val3
                              });
                          };
                          return Control_Bind.bind(Data_Either.bindEither)(index(xs)(pos + 4 | 0))(function (x4) {
                              var val4 = val3 | (x4 & 15) << 28;
                              var $37 = x4 < 128;
                              if ($37) {
                                  return Control_Applicative.pure(Data_Either.applicativeEither)({
                                      pos: pos + 5 | 0,
                                      val: val4 >>> 0
                                  });
                              };
                              return Control_Bind.bind(Data_Either.bindEither)(index(xs)(pos + 5 | 0))(function (x5) {
                                  var $38 = x5 < 128;
                                  if ($38) {
                                      return Control_Applicative.pure(Data_Either.applicativeEither)({
                                          pos: pos + 6 | 0,
                                          val: val4
                                      });
                                  };
                                  return Control_Bind.bind(Data_Either.bindEither)(index(xs)(pos + 6 | 0))(function (x6) {
                                      var $39 = x6 < 128;
                                      if ($39) {
                                          return Control_Applicative.pure(Data_Either.applicativeEither)({
                                              pos: pos + 7 | 0,
                                              val: val4
                                          });
                                      };
                                      return Control_Bind.bind(Data_Either.bindEither)(index(xs)(pos + 7 | 0))(function (x7) {
                                          var $40 = x7 < 128;
                                          if ($40) {
                                              return Control_Applicative.pure(Data_Either.applicativeEither)({
                                                  pos: pos + 8 | 0,
                                                  val: val4
                                              });
                                          };
                                          return Control_Bind.bind(Data_Either.bindEither)(index(xs)(pos + 8 | 0))(function (x8) {
                                              var $41 = x8 < 128;
                                              if ($41) {
                                                  return Control_Applicative.pure(Data_Either.applicativeEither)({
                                                      pos: pos + 9 | 0,
                                                      val: val4
                                                  });
                                              };
                                              return Control_Bind.bind(Data_Either.bindEither)(index(xs)(pos + 9 | 0))(function (x9) {
                                                  var $42 = x9 < 128;
                                                  if ($42) {
                                                      return Control_Applicative.pure(Data_Either.applicativeEither)({
                                                          pos: pos + 10 | 0,
                                                          val: val4
                                                      });
                                                  };
                                                  return new Data_Either.Left(IntTooLong.value);
                                              });
                                          });
                                      });
                                  });
                              });
                          });
                      });
                  });
              });
          });
      };
  };
  var signedVarint32 = unsignedVarint32;
  var skipType = function (v) {
      return function (v1) {
          return function (v2) {
              var xs = v;
              if (v2 === 0) {
                  return skip$prime(xs)(v1);
              };
              var xs = v;
              if (v2 === 1) {
                  return skip(8)(xs)(v1);
              };
              var xs = v;
              if (v2 === 2) {
                  return Control_Bind.bind(Data_Either.bindEither)(unsignedVarint32(xs)(v1))(function (v3) {
                      return skip(v3.val)(xs)(v3.pos);
                  });
              };
              if (v2 === 3) {
                  var loop = function (xs) {
                      return function (pos) {
                          return Control_Bind.bind(Data_Either.bindEither)(unsignedVarint32(xs)(pos))(function (v3) {
                              var wireType = v3.val & 7;
                              var $50 = wireType !== 4;
                              if ($50) {
                                  return Control_Bind.bind(Data_Either.bindEither)(skipType(xs)(v3.pos)(wireType))(function (v4) {
                                      return loop(xs)(v4.pos);
                                  });
                              };
                              return Control_Applicative.pure(Data_Either.applicativeEither)({
                                  pos: v3.pos,
                                  val: Data_Unit.unit
                              });
                          });
                      };
                  };
                  return loop(v)(v1);
              };
              if (v2 === 5) {
                  return skip(4)(v)(v1);
              };
              return new Data_Either.Left(new BadWireType(v2));
          };
      };
  };
  var $$double = function (xs) {
      return function (pos) {
          var fixedUint32 = function (pos1) {
              return Control_Bind.bind(Data_Either.bindEither)(index(xs)(pos1 + 0 | 0))(function (a) {
                  return Control_Bind.bind(Data_Either.bindEither)(index(xs)(pos1 + 1 | 0))(function (b) {
                      return Control_Bind.bind(Data_Either.bindEither)(index(xs)(pos1 + 2 | 0))(function (c) {
                          return Control_Bind.bind(Data_Either.bindEither)(index(xs)(pos1 + 3 | 0))(function (d) {
                              return Control_Applicative.pure(Data_Either.applicativeEither)({
                                  pos: pos1 + 4 | 0,
                                  val: (a << 0 | b << 8 | c << 16 | d << 24) >>> 0
                              });
                          });
                      });
                  });
              });
          };
          return Control_Bind.bind(Data_Either.bindEither)(fixedUint32(pos))(function (v) {
              return Control_Bind.bind(Data_Either.bindEither)(fixedUint32(v.pos))(function (v1) {
                  return Control_Applicative.pure(Data_Either.applicativeEither)({
                      pos: v1.pos,
                      val: $foreign.joinFloat64(v.val)(v1.val)
                  });
              });
          });
      };
  };
  var bytes = function (xs) {
      return function (pos0) {
          return Control_Bind.bind(Data_Either.bindEither)(unsignedVarint32(xs)(pos0))(function (v) {
              var end = v.pos + v.val | 0;
              var len = Proto_Uint8Array.length(xs);
              var $62 = end > len;
              if ($62) {
                  return new Data_Either.Left(new OutOfBound(end, len));
              };
              return Control_Applicative.pure(Data_Either.applicativeEither)({
                  pos: v.pos + v.val | 0,
                  val: Proto_Uint8Array.slice(xs)(v.pos)(end)
              });
          });
      };
  };
  var string = function (xs) {
      return function (pos0) {
          return Control_Bind.bind(Data_Either.bindEither)(bytes(xs)(pos0))(function (v) {
              return Control_Applicative.pure(Data_Either.applicativeEither)({
                  pos: v.pos,
                  val: Proto_Utf8.toString(v.val)
              });
          });
      };
  };
  var $$boolean = function (xs) {
      return function (pos) {
          return Control_Bind.bind(Data_Either.bindEither)(index(xs)(pos))(function (x) {
              var $68 = x === 0;
              if ($68) {
                  return Control_Applicative.pure(Data_Either.applicativeEither)({
                      pos: pos + 1 | 0,
                      val: false
                  });
              };
              return Control_Applicative.pure(Data_Either.applicativeEither)({
                  pos: pos + 1 | 0,
                  val: true
              });
          });
      };
  };
  exports["BadType"] = BadType;
  exports["MissingFields"] = MissingFields;
  exports["signedVarint32"] = signedVarint32;
  exports["unsignedVarint32"] = unsignedVarint32;
  exports["boolean"] = $$boolean;
  exports["double"] = $$double;
  exports["string"] = string;
  exports["skipType"] = skipType;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.7
  "use strict";
  $PS["DefaultSpec.Push"] = $PS["DefaultSpec.Push"] || {};
  var exports = $PS["DefaultSpec.Push"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_Rec_Class = $PS["Control.Monad.Rec.Class"];
  var Data_Array = $PS["Data.Array"];
  var Data_Either = $PS["Data.Either"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var DefaultSpec_Common = $PS["DefaultSpec.Common"];
  var Proto_Decode = $PS["Proto.Decode"];                
  var SimpleT1 = (function () {
      function SimpleT1(value0) {
          this.value0 = value0;
      };
      SimpleT1.create = function (value0) {
          return new SimpleT1(value0);
      };
      return SimpleT1;
  })();
  var SimpleT2 = (function () {
      function SimpleT2(value0) {
          this.value0 = value0;
      };
      SimpleT2.create = function (value0) {
          return new SimpleT2(value0);
      };
      return SimpleT2;
  })();
  var RecursiveT1$prime$prime = (function () {
      function RecursiveT1$prime$prime(value0) {
          this.value0 = value0;
      };
      RecursiveT1$prime$prime.create = function (value0) {
          return new RecursiveT1$prime$prime(value0);
      };
      return RecursiveT1$prime$prime;
  })();
  var RecursiveT2$prime$prime = (function () {
      function RecursiveT2$prime$prime(value0) {
          this.value0 = value0;
      };
      RecursiveT2$prime$prime.create = function (value0) {
          return new RecursiveT2$prime$prime(value0);
      };
      return RecursiveT2$prime$prime;
  })();
  var OneMaybe = (function () {
      function OneMaybe(value0) {
          this.value0 = value0;
      };
      OneMaybe.create = function (value0) {
          return new OneMaybe(value0);
      };
      return OneMaybe;
  })();
  var OneSeq = (function () {
      function OneSeq(value0) {
          this.value0 = value0;
      };
      OneSeq.create = function (value0) {
          return new OneSeq(value0);
      };
      return OneSeq;
  })();
  var eqPush = {
      eq: function (x) {
          return function (y) {
              if (x instanceof SimpleT1 && y instanceof SimpleT1) {
                  return x.value0.b1 === y.value0.b1 && x.value0.b2 === y.value0.b2 && Data_Eq.eq(Data_Maybe.eqMaybe(Data_Eq.eqBoolean))(x.value0.m1)(y.value0.m1);
              };
              if (x instanceof SimpleT2 && y instanceof SimpleT2) {
                  return x.value0.b0 === y.value0.b0 && x.value0.b1 === y.value0.b1 && x.value0.b2 === y.value0.b2;
              };
              if (x instanceof RecursiveT1$prime$prime && y instanceof RecursiveT1$prime$prime) {
                  return Data_Eq.eq(DefaultSpec_Common.eqRecursiveT1)(x.value0)(y.value0);
              };
              if (x instanceof RecursiveT2$prime$prime && y instanceof RecursiveT2$prime$prime) {
                  return Data_Eq.eq(DefaultSpec_Common.eqRecursiveT2)(x.value0)(y.value0);
              };
              if (x instanceof OneMaybe && y instanceof OneMaybe) {
                  return Data_Eq.eq(Data_Maybe.eqMaybe(Data_Eq.eqString))(x.value0.m1)(y.value0.m1);
              };
              if (x instanceof OneSeq && y instanceof OneSeq) {
                  return Data_Eq.eq(Data_Eq.eqArray(Data_Eq.eqString))(x.value0.xs)(y.value0.xs);
              };
              return false;
          };
      }
  };
  var decodeFieldLoop = function (end) {
      return function (res) {
          return function (f) {
              return Data_Functor.map(Data_Either.functorEither)(function (v) {
                  return new Control_Monad_Rec_Class.Loop({
                      a: end,
                      b: f(v.val),
                      c: v.pos
                  });
              })(res);
          };
      };
  };
  var decodeOneMaybe = function (_xs_) {
      return function (pos0) {
          var decode = function (end) {
              return function (acc) {
                  return function (pos1) {
                      if (pos1 < end) {
                          return Control_Bind.bind(Data_Either.bindEither)(Proto_Decode.unsignedVarint32(_xs_)(pos1))(function (v) {
                              var v1 = v.val >>> 3;
                              if (v1 === 1) {
                                  return decodeFieldLoop(end)(Proto_Decode.string(_xs_)(v.pos))(function (val) {
                                      return {
                                          m1: new Data_Maybe.Just(val)
                                      };
                                  });
                              };
                              return decodeFieldLoop(end)(Proto_Decode.skipType(_xs_)(v.pos)(v.val & 7))(function (v2) {
                                  return acc;
                              });
                          });
                      };
                      return Control_Applicative.pure(Data_Either.applicativeEither)(new Control_Monad_Rec_Class.Done({
                          pos: pos1,
                          val: acc
                      }));
                  };
              };
          };
          return Control_Bind.bind(Data_Either.bindEither)(Proto_Decode.unsignedVarint32(_xs_)(pos0))(function (v) {
              return Control_Monad_Rec_Class.tailRecM3(Control_Monad_Rec_Class.monadRecEither)(decode)(v.pos + v.val | 0)({
                  m1: Data_Maybe.Nothing.value
              })(v.pos);
          });
      };
  };
  var decodeOneSeq = function (_xs_) {
      return function (pos0) {
          var decode = function (end) {
              return function (acc) {
                  return function (pos1) {
                      if (pos1 < end) {
                          return Control_Bind.bind(Data_Either.bindEither)(Proto_Decode.unsignedVarint32(_xs_)(pos1))(function (v) {
                              var v1 = v.val >>> 3;
                              if (v1 === 1) {
                                  return decodeFieldLoop(end)(Proto_Decode.string(_xs_)(v.pos))(function (val) {
                                      return {
                                          xs: Data_Array.snoc(acc.xs)(val)
                                      };
                                  });
                              };
                              return decodeFieldLoop(end)(Proto_Decode.skipType(_xs_)(v.pos)(v.val & 7))(function (v2) {
                                  return acc;
                              });
                          });
                      };
                      return Control_Applicative.pure(Data_Either.applicativeEither)(new Control_Monad_Rec_Class.Done({
                          pos: pos1,
                          val: acc
                      }));
                  };
              };
          };
          return Control_Bind.bind(Data_Either.bindEither)(Proto_Decode.unsignedVarint32(_xs_)(pos0))(function (v) {
              return Control_Monad_Rec_Class.tailRecM3(Control_Monad_Rec_Class.monadRecEither)(decode)(v.pos + v.val | 0)({
                  xs: [  ]
              })(v.pos);
          });
      };
  };
  var decodeRecursiveT1 = function (_xs_) {
      return function (pos0) {
          var decode = function (end) {
              return function (acc) {
                  return function (pos1) {
                      if (pos1 < end) {
                          return Control_Bind.bind(Data_Either.bindEither)(Proto_Decode.unsignedVarint32(_xs_)(pos1))(function (v) {
                              var v1 = v.val >>> 3;
                              if (v1 === 1) {
                                  return decodeFieldLoop(end)(Proto_Decode["boolean"](_xs_)(v.pos))(function (val) {
                                      return {
                                          b1: new Data_Maybe.Just(val),
                                          b2: acc.b2,
                                          x: acc.x
                                      };
                                  });
                              };
                              if (v1 === 2) {
                                  return decodeFieldLoop(end)(Proto_Decode.string(_xs_)(v.pos))(function (val) {
                                      return {
                                          b2: new Data_Maybe.Just(val),
                                          b1: acc.b1,
                                          x: acc.x
                                      };
                                  });
                              };
                              if (v1 === 3) {
                                  return decodeFieldLoop(end)(decodeRecursiveT1(_xs_)(v.pos))(function (val) {
                                      return {
                                          x: new Data_Maybe.Just(val),
                                          b1: acc.b1,
                                          b2: acc.b2
                                      };
                                  });
                              };
                              return decodeFieldLoop(end)(Proto_Decode.skipType(_xs_)(v.pos)(v.val & 7))(function (v2) {
                                  return acc;
                              });
                          });
                      };
                      return Control_Applicative.pure(Data_Either.applicativeEither)(new Control_Monad_Rec_Class.Done({
                          pos: pos1,
                          val: acc
                      }));
                  };
              };
          };
          return Control_Bind.bind(Data_Either.bindEither)(Proto_Decode.unsignedVarint32(_xs_)(pos0))(function (v) {
              return Control_Bind.bind(Data_Either.bindEither)(Control_Monad_Rec_Class.tailRecM3(Control_Monad_Rec_Class.monadRecEither)(decode)(v.pos + v.val | 0)({
                  b1: Data_Maybe.Nothing.value,
                  b2: Data_Maybe.Nothing.value,
                  x: Data_Maybe.Nothing.value
              })(v.pos))(function (v1) {
                  if (v1.val.x instanceof Data_Maybe.Just) {
                      return Control_Applicative.pure(Data_Either.applicativeEither)({
                          pos: v1.pos,
                          val: {
                              b1: Data_Maybe.fromMaybe(false)(v1.val.b1),
                              b2: Data_Maybe.fromMaybe("")(v1.val.b2),
                              x: v1.val.x.value0
                          }
                      });
                  };
                  return new Data_Either.Left(new Proto_Decode.MissingFields("RecursiveT1"));
              });
          });
      };
  };
  var decodeRecursiveT2 = function (_xs_) {
      return function (pos0) {
          var decode = function (end) {
              return function (acc) {
                  return function (pos1) {
                      if (pos1 < end) {
                          return Control_Bind.bind(Data_Either.bindEither)(Proto_Decode.unsignedVarint32(_xs_)(pos1))(function (v) {
                              var v1 = v.val >>> 3;
                              if (v1 === 1) {
                                  return decodeFieldLoop(end)(Proto_Decode["boolean"](_xs_)(v.pos))(function (val) {
                                      return {
                                          b1: new Data_Maybe.Just(val),
                                          b2: acc.b2,
                                          x: acc.x
                                      };
                                  });
                              };
                              if (v1 === 2) {
                                  return decodeFieldLoop(end)(Proto_Decode.string(_xs_)(v.pos))(function (val) {
                                      return {
                                          b2: new Data_Maybe.Just(val),
                                          b1: acc.b1,
                                          x: acc.x
                                      };
                                  });
                              };
                              if (v1 === 3) {
                                  return decodeFieldLoop(end)(decodeRecursiveT2(_xs_)(v.pos))(function (val) {
                                      return {
                                          x: new Data_Maybe.Just(val),
                                          b1: acc.b1,
                                          b2: acc.b2
                                      };
                                  });
                              };
                              return decodeFieldLoop(end)(Proto_Decode.skipType(_xs_)(v.pos)(v.val & 7))(function (v2) {
                                  return acc;
                              });
                          });
                      };
                      return Control_Applicative.pure(Data_Either.applicativeEither)(new Control_Monad_Rec_Class.Done({
                          pos: pos1,
                          val: acc
                      }));
                  };
              };
          };
          return Control_Bind.bind(Data_Either.bindEither)(Proto_Decode.unsignedVarint32(_xs_)(pos0))(function (v) {
              return Control_Bind.bind(Data_Either.bindEither)(Control_Monad_Rec_Class.tailRecM3(Control_Monad_Rec_Class.monadRecEither)(decode)(v.pos + v.val | 0)({
                  b1: Data_Maybe.Nothing.value,
                  b2: Data_Maybe.Nothing.value,
                  x: Data_Maybe.Nothing.value
              })(v.pos))(function (v1) {
                  return Control_Applicative.pure(Data_Either.applicativeEither)({
                      pos: v1.pos,
                      val: {
                          b1: Data_Maybe.fromMaybe(false)(v1.val.b1),
                          b2: Data_Maybe.fromMaybe("")(v1.val.b2),
                          x: v1.val.x
                      }
                  });
              });
          });
      };
  };
  var decodeSimpleT1 = function (_xs_) {
      return function (pos0) {
          var decode = function (end) {
              return function (acc) {
                  return function (pos1) {
                      if (pos1 < end) {
                          return Control_Bind.bind(Data_Either.bindEither)(Proto_Decode.unsignedVarint32(_xs_)(pos1))(function (v) {
                              var v1 = v.val >>> 3;
                              if (v1 === 1) {
                                  return decodeFieldLoop(end)(Proto_Decode["boolean"](_xs_)(v.pos))(function (val) {
                                      return {
                                          m1: new Data_Maybe.Just(val),
                                          b1: acc.b1,
                                          b2: acc.b2
                                      };
                                  });
                              };
                              if (v1 === 2) {
                                  return decodeFieldLoop(end)(Proto_Decode["boolean"](_xs_)(v.pos))(function (val) {
                                      return {
                                          b1: new Data_Maybe.Just(val),
                                          b2: acc.b2,
                                          m1: acc.m1
                                      };
                                  });
                              };
                              if (v1 === 3) {
                                  return decodeFieldLoop(end)(Proto_Decode.string(_xs_)(v.pos))(function (val) {
                                      return {
                                          b2: new Data_Maybe.Just(val),
                                          b1: acc.b1,
                                          m1: acc.m1
                                      };
                                  });
                              };
                              return decodeFieldLoop(end)(Proto_Decode.skipType(_xs_)(v.pos)(v.val & 7))(function (v2) {
                                  return acc;
                              });
                          });
                      };
                      return Control_Applicative.pure(Data_Either.applicativeEither)(new Control_Monad_Rec_Class.Done({
                          pos: pos1,
                          val: acc
                      }));
                  };
              };
          };
          return Control_Bind.bind(Data_Either.bindEither)(Proto_Decode.unsignedVarint32(_xs_)(pos0))(function (v) {
              return Control_Bind.bind(Data_Either.bindEither)(Control_Monad_Rec_Class.tailRecM3(Control_Monad_Rec_Class.monadRecEither)(decode)(v.pos + v.val | 0)({
                  m1: Data_Maybe.Nothing.value,
                  b1: Data_Maybe.Nothing.value,
                  b2: Data_Maybe.Nothing.value
              })(v.pos))(function (v1) {
                  return Control_Applicative.pure(Data_Either.applicativeEither)({
                      pos: v1.pos,
                      val: {
                          m1: v1.val.m1,
                          b1: Data_Maybe.fromMaybe(false)(v1.val.b1),
                          b2: Data_Maybe.fromMaybe("")(v1.val.b2)
                      }
                  });
              });
          });
      };
  };
  var decodeSimpleT2 = function (_xs_) {
      return function (pos0) {
          var decode = function (end) {
              return function (acc) {
                  return function (pos1) {
                      if (pos1 < end) {
                          return Control_Bind.bind(Data_Either.bindEither)(Proto_Decode.unsignedVarint32(_xs_)(pos1))(function (v) {
                              var v1 = v.val >>> 3;
                              if (v1 === 1) {
                                  return decodeFieldLoop(end)(Proto_Decode["boolean"](_xs_)(v.pos))(function (val) {
                                      return {
                                          b0: new Data_Maybe.Just(val),
                                          b1: acc.b1,
                                          b2: acc.b2
                                      };
                                  });
                              };
                              if (v1 === 2) {
                                  return decodeFieldLoop(end)(Proto_Decode["boolean"](_xs_)(v.pos))(function (val) {
                                      return {
                                          b1: new Data_Maybe.Just(val),
                                          b0: acc.b0,
                                          b2: acc.b2
                                      };
                                  });
                              };
                              if (v1 === 3) {
                                  return decodeFieldLoop(end)(Proto_Decode.string(_xs_)(v.pos))(function (val) {
                                      return {
                                          b2: new Data_Maybe.Just(val),
                                          b0: acc.b0,
                                          b1: acc.b1
                                      };
                                  });
                              };
                              return decodeFieldLoop(end)(Proto_Decode.skipType(_xs_)(v.pos)(v.val & 7))(function (v2) {
                                  return acc;
                              });
                          });
                      };
                      return Control_Applicative.pure(Data_Either.applicativeEither)(new Control_Monad_Rec_Class.Done({
                          pos: pos1,
                          val: acc
                      }));
                  };
              };
          };
          return Control_Bind.bind(Data_Either.bindEither)(Proto_Decode.unsignedVarint32(_xs_)(pos0))(function (v) {
              return Control_Bind.bind(Data_Either.bindEither)(Control_Monad_Rec_Class.tailRecM3(Control_Monad_Rec_Class.monadRecEither)(decode)(v.pos + v.val | 0)({
                  b0: Data_Maybe.Nothing.value,
                  b1: Data_Maybe.Nothing.value,
                  b2: Data_Maybe.Nothing.value
              })(v.pos))(function (v1) {
                  if (v1.val.b0 instanceof Data_Maybe.Just) {
                      return Control_Applicative.pure(Data_Either.applicativeEither)({
                          pos: v1.pos,
                          val: {
                              b0: v1.val.b0.value0,
                              b1: Data_Maybe.fromMaybe(false)(v1.val.b1),
                              b2: Data_Maybe.fromMaybe("")(v1.val.b2)
                          }
                      });
                  };
                  return new Data_Either.Left(new Proto_Decode.MissingFields("SimpleT2"));
              });
          });
      };
  };
  var decodePush = function (_xs_) {
      var decode = function (res) {
          return function (f) {
              return Data_Functor.map(Data_Either.functorEither)(function (v) {
                  return {
                      pos: v.pos,
                      val: f(v.val)
                  };
              })(res);
          };
      };
      return Control_Bind.bind(Data_Either.bindEither)(Proto_Decode.unsignedVarint32(_xs_)(0))(function (v) {
          var v1 = v.val >>> 3;
          if (v1 === 1) {
              return decode(decodeSimpleT1(_xs_)(v.pos))(SimpleT1.create);
          };
          if (v1 === 2) {
              return decode(decodeSimpleT2(_xs_)(v.pos))(SimpleT2.create);
          };
          if (v1 === 3) {
              return decode(decodeRecursiveT1(_xs_)(v.pos))(RecursiveT1$prime$prime.create);
          };
          if (v1 === 4) {
              return decode(decodeRecursiveT2(_xs_)(v.pos))(RecursiveT2$prime$prime.create);
          };
          if (v1 === 5) {
              return decode(decodeOneMaybe(_xs_)(v.pos))(OneMaybe.create);
          };
          if (v1 === 6) {
              return decode(decodeOneSeq(_xs_)(v.pos))(OneSeq.create);
          };
          return new Data_Either.Left(new Proto_Decode.BadType(v1));
      });
  };
  exports["SimpleT1"] = SimpleT1;
  exports["SimpleT2"] = SimpleT2;
  exports["RecursiveT1''"] = RecursiveT1$prime$prime;
  exports["RecursiveT2''"] = RecursiveT2$prime$prime;
  exports["OneMaybe"] = OneMaybe;
  exports["OneSeq"] = OneSeq;
  exports["decodePush"] = decodePush;
  exports["eqPush"] = eqPush;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.7
  "use strict";
  $PS["EqSpec.Common"] = $PS["EqSpec.Common"] || {};
  var exports = $PS["EqSpec.Common"];
  var Data_Eq = $PS["Data.Eq"];
  var Start = (function () {
      function Start() {

      };
      Start.value = new Start();
      return Start;
  })();
  var Ext = (function () {
      function Ext(value0) {
          this.value0 = value0;
      };
      Ext.create = function (value0) {
          return new Ext(value0);
      };
      return Ext;
  })();
  var eqNode = {
      eq: function (x) {
          return function (y) {
              return Data_Eq.eq(Data_Eq.eqArray(eqNode))(x.forest)(y.forest) && x.root === y.root;
          };
      }
  };
  var eqFlowStep = {
      eq: function (x) {
          return function (y) {
              if (x instanceof Start && y instanceof Start) {
                  return true;
              };
              if (x instanceof Ext && y instanceof Ext) {
                  return Data_Eq.eq(eqNode)(x.value0.tree)(y.value0.tree);
              };
              return false;
          };
      }
  };
  exports["Start"] = Start;
  exports["Ext"] = Ext;
  exports["eqFlowStep"] = eqFlowStep;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.7
  "use strict";
  $PS["EqSpec.Pull"] = $PS["EqSpec.Pull"] || {};
  var exports = $PS["EqSpec.Pull"];
  var Data_Array = $PS["Data.Array"];
  var Data_Eq = $PS["Data.Eq"];
  var EqSpec_Common = $PS["EqSpec.Common"];
  var Proto_Encode = $PS["Proto.Encode"];
  var Proto_Uint8Array = $PS["Proto.Uint8Array"];                
  var C = (function () {
      function C(value0) {
          this.value0 = value0;
      };
      C.create = function (value0) {
          return new C(value0);
      };
      return C;
  })();
  var Flow = (function () {
      function Flow(value0) {
          this.value0 = value0;
      };
      Flow.create = function (value0) {
          return new Flow(value0);
      };
      return Flow;
  })();
  var B = (function () {
      function B(value0) {
          this.value0 = value0;
      };
      B.create = function (value0) {
          return new B(value0);
      };
      return B;
  })();
  var eqA = {
      eq: function (x) {
          return function (y) {
              return Data_Eq.eq(Proto_Uint8Array.eqUint8Array)(x.value0.bytes)(y.value0.bytes);
          };
      }
  };
  var eqPull = {
      eq: function (x) {
          return function (y) {
              if (x instanceof Flow && y instanceof Flow) {
                  return Data_Eq.eq(Data_Eq.eqArray(EqSpec_Common.eqFlowStep))(x.value0.steps)(y.value0.steps);
              };
              if (x instanceof B && y instanceof B) {
                  return Data_Eq.eq(eqA)(x.value0.a)(y.value0.a);
              };
              return false;
          };
      }
  };
  var encodeStart = Proto_Encode.unsignedVarint32(0);
  var encodeNode = function (v) {
      var xs = Proto_Uint8Array.concatAll([ Proto_Encode.unsignedVarint32(10), Proto_Encode.string(v.root), Proto_Uint8Array.concatAll(Data_Array.concatMap(function (x) {
          return [ Proto_Encode.unsignedVarint32(18), encodeNode(x) ];
      })(v.forest)) ]);
      return Proto_Uint8Array.concatAll([ Proto_Encode.unsignedVarint32(Proto_Uint8Array.length(xs)), xs ]);
  };
  var encodeExt = function (msg) {
      var xs = Proto_Uint8Array.concatAll([ Proto_Encode.unsignedVarint32(10), encodeNode(msg.tree) ]);
      return Proto_Uint8Array.concatAll([ Proto_Encode.unsignedVarint32(Proto_Uint8Array.length(xs)), xs ]);
  };
  var encodeFlowStep = function (v) {
      if (v instanceof EqSpec_Common.Start) {
          var xs = Proto_Uint8Array.concatAll([ Proto_Encode.unsignedVarint32(10), encodeStart ]);
          return Proto_Uint8Array.concatAll([ Proto_Encode.unsignedVarint32(Proto_Uint8Array.length(xs)), xs ]);
      };
      if (v instanceof EqSpec_Common.Ext) {
          var xs = Proto_Uint8Array.concatAll([ Proto_Encode.unsignedVarint32(18), encodeExt(v.value0) ]);
          return Proto_Uint8Array.concatAll([ Proto_Encode.unsignedVarint32(Proto_Uint8Array.length(xs)), xs ]);
      };
      throw new Error("Failed pattern match at EqSpec.Pull (line 34, column 1 - line 34, column 41): " + [ v.constructor.name ]);
  };
  var encodeFlow = function (msg) {
      var xs = Proto_Uint8Array.concatAll([ Proto_Uint8Array.concatAll(Data_Array.concatMap(function (x) {
          return [ Proto_Encode.unsignedVarint32(10), encodeFlowStep(x) ];
      })(msg.steps)) ]);
      return Proto_Uint8Array.concatAll([ Proto_Encode.unsignedVarint32(Proto_Uint8Array.length(xs)), xs ]);
  };
  var encodeC = function (msg) {
      var xs = Proto_Uint8Array.concatAll([ Proto_Encode.unsignedVarint32(10), Proto_Encode.bytes(msg.bytes) ]);
      return Proto_Uint8Array.concatAll([ Proto_Encode.unsignedVarint32(Proto_Uint8Array.length(xs)), xs ]);
  };
  var encodeA = function (v) {
      var xs = Proto_Uint8Array.concatAll([ Proto_Encode.unsignedVarint32(10), encodeC(v.value0) ]);
      return Proto_Uint8Array.concatAll([ Proto_Encode.unsignedVarint32(Proto_Uint8Array.length(xs)), xs ]);
  };
  var encodeB = function (msg) {
      var xs = Proto_Uint8Array.concatAll([ Proto_Encode.unsignedVarint32(10), encodeA(msg.a) ]);
      return Proto_Uint8Array.concatAll([ Proto_Encode.unsignedVarint32(Proto_Uint8Array.length(xs)), xs ]);
  };
  var encodePull = function (v) {
      if (v instanceof Flow) {
          return Proto_Uint8Array.concatAll([ Proto_Encode.unsignedVarint32(10), encodeFlow(v.value0) ]);
      };
      if (v instanceof B) {
          return Proto_Uint8Array.concatAll([ Proto_Encode.unsignedVarint32(18), encodeB(v.value0) ]);
      };
      throw new Error("Failed pattern match at EqSpec.Pull (line 23, column 1 - line 23, column 33): " + [ v.constructor.name ]);
  };
  exports["Flow"] = Flow;
  exports["B"] = B;
  exports["C"] = C;
  exports["encodePull"] = encodePull;
  exports["eqPull"] = eqPull;
  exports["eqA"] = eqA;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.7
  "use strict";
  $PS["EqSpec.Push"] = $PS["EqSpec.Push"] || {};
  var exports = $PS["EqSpec.Push"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_Rec_Class = $PS["Control.Monad.Rec.Class"];
  var Data_Array = $PS["Data.Array"];
  var Data_Either = $PS["Data.Either"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Unit = $PS["Data.Unit"];
  var EqSpec_Common = $PS["EqSpec.Common"];
  var Proto_Decode = $PS["Proto.Decode"];                
  var Flow = (function () {
      function Flow(value0) {
          this.value0 = value0;
      };
      Flow.create = function (value0) {
          return new Flow(value0);
      };
      return Flow;
  })();
  var eqPush = {
      eq: function (x) {
          return function (y) {
              return Data_Eq.eq(Data_Eq.eqArray(EqSpec_Common.eqFlowStep))(x.value0.steps)(y.value0.steps);
          };
      }
  };
  var decodeStart = function (_xs_) {
      return function (pos0) {
          return Control_Bind.bind(Data_Either.bindEither)(Proto_Decode.unsignedVarint32(_xs_)(pos0))(function (v) {
              return Control_Applicative.pure(Data_Either.applicativeEither)({
                  pos: v.pos + v.val | 0,
                  val: Data_Unit.unit
              });
          });
      };
  };
  var decodeFieldLoop = function (end) {
      return function (res) {
          return function (f) {
              return Data_Functor.map(Data_Either.functorEither)(function (v) {
                  return new Control_Monad_Rec_Class.Loop({
                      a: end,
                      b: f(v.val),
                      c: v.pos
                  });
              })(res);
          };
      };
  };
  var decodeNode = function (_xs_) {
      return function (pos0) {
          var decode = function (end) {
              return function (acc) {
                  return function (pos1) {
                      if (pos1 < end) {
                          return Control_Bind.bind(Data_Either.bindEither)(Proto_Decode.unsignedVarint32(_xs_)(pos1))(function (v) {
                              var v1 = v.val >>> 3;
                              if (v1 === 1) {
                                  return decodeFieldLoop(end)(Proto_Decode.string(_xs_)(v.pos))(function (val) {
                                      return {
                                          root: new Data_Maybe.Just(val),
                                          forest: acc.forest
                                      };
                                  });
                              };
                              if (v1 === 2) {
                                  return decodeFieldLoop(end)(decodeNode(_xs_)(v.pos))(function (val) {
                                      return {
                                          forest: Data_Array.snoc(acc.forest)(val),
                                          root: acc.root
                                      };
                                  });
                              };
                              return decodeFieldLoop(end)(Proto_Decode.skipType(_xs_)(v.pos)(v.val & 7))(function (v2) {
                                  return acc;
                              });
                          });
                      };
                      return Control_Applicative.pure(Data_Either.applicativeEither)(new Control_Monad_Rec_Class.Done({
                          pos: pos1,
                          val: acc
                      }));
                  };
              };
          };
          return Control_Bind.bind(Data_Either.bindEither)(Proto_Decode.unsignedVarint32(_xs_)(pos0))(function (v) {
              return Control_Bind.bind(Data_Either.bindEither)(Control_Monad_Rec_Class.tailRecM3(Control_Monad_Rec_Class.monadRecEither)(decode)(v.pos + v.val | 0)({
                  root: Data_Maybe.Nothing.value,
                  forest: [  ]
              })(v.pos))(function (v1) {
                  if (v1.val.root instanceof Data_Maybe.Just) {
                      return Control_Applicative.pure(Data_Either.applicativeEither)({
                          pos: v1.pos,
                          val: {
                              root: v1.val.root.value0,
                              forest: v1.val.forest
                          }
                      });
                  };
                  return new Data_Either.Left(new Proto_Decode.MissingFields("Node"));
              });
          });
      };
  };
  var decodeExt = function (_xs_) {
      return function (pos0) {
          var decode = function (end) {
              return function (acc) {
                  return function (pos1) {
                      if (pos1 < end) {
                          return Control_Bind.bind(Data_Either.bindEither)(Proto_Decode.unsignedVarint32(_xs_)(pos1))(function (v) {
                              var v1 = v.val >>> 3;
                              if (v1 === 1) {
                                  return decodeFieldLoop(end)(decodeNode(_xs_)(v.pos))(function (val) {
                                      return {
                                          tree: new Data_Maybe.Just(val)
                                      };
                                  });
                              };
                              return decodeFieldLoop(end)(Proto_Decode.skipType(_xs_)(v.pos)(v.val & 7))(function (v2) {
                                  return acc;
                              });
                          });
                      };
                      return Control_Applicative.pure(Data_Either.applicativeEither)(new Control_Monad_Rec_Class.Done({
                          pos: pos1,
                          val: acc
                      }));
                  };
              };
          };
          return Control_Bind.bind(Data_Either.bindEither)(Proto_Decode.unsignedVarint32(_xs_)(pos0))(function (v) {
              return Control_Bind.bind(Data_Either.bindEither)(Control_Monad_Rec_Class.tailRecM3(Control_Monad_Rec_Class.monadRecEither)(decode)(v.pos + v.val | 0)({
                  tree: Data_Maybe.Nothing.value
              })(v.pos))(function (v1) {
                  if (v1.val.tree instanceof Data_Maybe.Just) {
                      return Control_Applicative.pure(Data_Either.applicativeEither)({
                          pos: v1.pos,
                          val: {
                              tree: v1.val.tree.value0
                          }
                      });
                  };
                  return new Data_Either.Left(new Proto_Decode.MissingFields("Ext"));
              });
          });
      };
  };
  var decodeFlowStep = function (_xs_) {
      return function (pos0) {
          var decode = function (end) {
              return function (v) {
                  return function (pos1) {
                      if (pos1 < end) {
                          return Control_Bind.bind(Data_Either.bindEither)(Proto_Decode.unsignedVarint32(_xs_)(pos1))(function (v1) {
                              var v2 = v1.val >>> 3;
                              if (v2 === 1) {
                                  return decodeFieldLoop(end)(decodeStart(_xs_)(v1.pos))(function (v3) {
                                      return new Data_Maybe.Just(EqSpec_Common.Start.value);
                                  });
                              };
                              if (v2 === 2) {
                                  return decodeFieldLoop(end)(decodeExt(_xs_)(v1.pos))(function ($104) {
                                      return Data_Maybe.Just.create(EqSpec_Common.Ext.create($104));
                                  });
                              };
                              return decodeFieldLoop(end)(Proto_Decode.skipType(_xs_)(v1.pos)(v1.val & 7))(function (v3) {
                                  return v;
                              });
                          });
                      };
                      if (v instanceof Data_Maybe.Just) {
                          return Control_Applicative.pure(Data_Either.applicativeEither)(new Control_Monad_Rec_Class.Done({
                              pos: pos1,
                              val: v.value0
                          }));
                      };
                      if (v instanceof Data_Maybe.Nothing) {
                          return new Data_Either.Left(new Proto_Decode.MissingFields("FlowStep"));
                      };
                      throw new Error("Failed pattern match at EqSpec.Push (line 54, column 5 - line 54, column 144): " + [ end.constructor.name, v.constructor.name, pos1.constructor.name ]);
                  };
              };
          };
          return Control_Bind.bind(Data_Either.bindEither)(Proto_Decode.unsignedVarint32(_xs_)(pos0))(function (v) {
              return Control_Monad_Rec_Class.tailRecM3(Control_Monad_Rec_Class.monadRecEither)(decode)(v.pos + v.val | 0)(Data_Maybe.Nothing.value)(v.pos);
          });
      };
  };
  var decodeFlow = function (_xs_) {
      return function (pos0) {
          var decode = function (end) {
              return function (acc) {
                  return function (pos1) {
                      if (pos1 < end) {
                          return Control_Bind.bind(Data_Either.bindEither)(Proto_Decode.unsignedVarint32(_xs_)(pos1))(function (v) {
                              var v1 = v.val >>> 3;
                              if (v1 === 1) {
                                  return decodeFieldLoop(end)(decodeFlowStep(_xs_)(v.pos))(function (val) {
                                      return {
                                          steps: Data_Array.snoc(acc.steps)(val)
                                      };
                                  });
                              };
                              return decodeFieldLoop(end)(Proto_Decode.skipType(_xs_)(v.pos)(v.val & 7))(function (v2) {
                                  return acc;
                              });
                          });
                      };
                      return Control_Applicative.pure(Data_Either.applicativeEither)(new Control_Monad_Rec_Class.Done({
                          pos: pos1,
                          val: acc
                      }));
                  };
              };
          };
          return Control_Bind.bind(Data_Either.bindEither)(Proto_Decode.unsignedVarint32(_xs_)(pos0))(function (v) {
              return Control_Monad_Rec_Class.tailRecM3(Control_Monad_Rec_Class.monadRecEither)(decode)(v.pos + v.val | 0)({
                  steps: [  ]
              })(v.pos);
          });
      };
  };
  var decodePush = function (_xs_) {
      var decode = function (res) {
          return function (f) {
              return Data_Functor.map(Data_Either.functorEither)(function (v) {
                  return {
                      pos: v.pos,
                      val: f(v.val)
                  };
              })(res);
          };
      };
      return Control_Bind.bind(Data_Either.bindEither)(Proto_Decode.unsignedVarint32(_xs_)(0))(function (v) {
          var v1 = v.val >>> 3;
          if (v1 === 1) {
              return decode(decodeFlow(_xs_)(v.pos))(Flow.create);
          };
          return new Data_Either.Left(new Proto_Decode.BadType(v1));
      });
  };
  exports["Flow"] = Flow;
  exports["decodePush"] = decodePush;
  exports["eqPush"] = eqPush;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.7
  "use strict";
  $PS["Pull"] = $PS["Pull"] || {};
  var exports = $PS["Pull"];
  var Common = $PS["Common"];
  var Data_Array = $PS["Data.Array"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Proto_Encode = $PS["Proto.Encode"];
  var Proto_Uint8Array = $PS["Proto.Uint8Array"];                
  var GetSites = (function () {
      function GetSites() {

      };
      GetSites.value = new GetSites();
      return GetSites;
  })();
  var UploadChunk = (function () {
      function UploadChunk(value0) {
          this.value0 = value0;
      };
      UploadChunk.create = function (value0) {
          return new UploadChunk(value0);
      };
      return UploadChunk;
  })();
  var SavePage = (function () {
      function SavePage(value0) {
          this.value0 = value0;
      };
      SavePage.create = function (value0) {
          return new SavePage(value0);
      };
      return SavePage;
  })();
  var SaveComponentTemplate = (function () {
      function SaveComponentTemplate(value0) {
          this.value0 = value0;
      };
      SaveComponentTemplate.create = function (value0) {
          return new SaveComponentTemplate(value0);
      };
      return SaveComponentTemplate;
  })();
  var ComponentsSavePrefs = (function () {
      function ComponentsSavePrefs(value0) {
          this.value0 = value0;
      };
      ComponentsSavePrefs.create = function (value0) {
          return new ComponentsSavePrefs(value0);
      };
      return ComponentsSavePrefs;
  })();
  var eqPull = {
      eq: function (x) {
          return function (y) {
              if (x instanceof GetSites && y instanceof GetSites) {
                  return true;
              };
              if (x instanceof UploadChunk && y instanceof UploadChunk) {
                  return Data_Eq.eq(Proto_Uint8Array.eqUint8Array)(x.value0.chunk)(y.value0.chunk) && x.value0.id === y.value0.id && Data_Eq.eq(Data_Eq.eqArray(Data_Eq.eqString))(x.value0.path)(y.value0.path);
              };
              if (x instanceof SavePage && y instanceof SavePage) {
                  return x.value0.guest === y.value0.guest && Data_Eq.eq(Data_Maybe.eqMaybe(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                      reflectSymbol: function () {
                          return "order";
                      }
                  })(Data_Eq.eqNumber))()({
                      reflectSymbol: function () {
                          return "descr";
                      }
                  })(Data_Eq.eqString))))(x.value0.mobileSeo)(y.value0.mobileSeo) && Data_Eq.eq(Data_Eq.eqArray(Data_Tuple.eqTuple(Data_Eq.eqString)(Data_Eq.eqString)))(x.value0.name)(y.value0.name) && (x.value0.seo.descr === y.value0.seo.descr && x.value0.seo.order === y.value0.seo.order) && Data_Eq.eq(Common.eqPageType)(x.value0.tpe)(y.value0.tpe);
              };
              if (x instanceof SaveComponentTemplate && y instanceof SaveComponentTemplate) {
                  return Data_Eq.eq(Common.eqFieldNode)(x.value0.fieldNode)(y.value0.fieldNode);
              };
              if (x instanceof ComponentsSavePrefs && y instanceof ComponentsSavePrefs) {
                  return Data_Eq.eq(Data_Maybe.eqMaybe(Common.eqFieldNode))(x.value0.extTree)(y.value0.extTree) && x.value0.id === y.value0.id && x.value0.pageid === y.value0.pageid && x.value0.siteid === y.value0.siteid && Data_Eq.eq(Common.eqFieldNode)(x.value0.tree)(y.value0.tree);
              };
              return false;
          };
      }
  };
  var encodeUploadChunk = function (msg) {
      var xs = Proto_Uint8Array.concatAll([ Proto_Uint8Array.concatAll(Data_Array.concatMap(function (x) {
          return [ Proto_Encode.unsignedVarint32(10), Proto_Encode.string(x) ];
      })(msg.path)), Proto_Encode.unsignedVarint32(18), Proto_Encode.string(msg.id), Proto_Encode.unsignedVarint32(26), Proto_Encode.bytes(msg.chunk) ]);
      return Proto_Uint8Array.concatAll([ Proto_Encode.unsignedVarint32(Proto_Uint8Array.length(xs)), xs ]);
  };
  var encodeStringString = function (v) {
      var msg = {
          "_1": v.value0,
          "_2": v.value1
      };
      var xs = Proto_Uint8Array.concatAll([ Proto_Encode.unsignedVarint32(10), Proto_Encode.string(msg["_1"]), Proto_Encode.unsignedVarint32(18), Proto_Encode.string(msg["_2"]) ]);
      return Proto_Uint8Array.concatAll([ Proto_Encode.unsignedVarint32(Proto_Uint8Array.length(xs)), xs ]);
  };
  var encodePageWidgets = Proto_Encode.unsignedVarint32(0);
  var encodePageUrl = function (msg) {
      var xs = Proto_Uint8Array.concatAll([ Proto_Encode.unsignedVarint32(10), Proto_Encode.string(msg.addr) ]);
      return Proto_Uint8Array.concatAll([ Proto_Encode.unsignedVarint32(Proto_Uint8Array.length(xs)), xs ]);
  };
  var encodePageType = function (v) {
      if (v instanceof Common.PageWidgets) {
          var xs = Proto_Uint8Array.concatAll([ Proto_Encode.unsignedVarint32(10), encodePageWidgets ]);
          return Proto_Uint8Array.concatAll([ Proto_Encode.unsignedVarint32(Proto_Uint8Array.length(xs)), xs ]);
      };
      if (v instanceof Common.PageUrl) {
          var xs = Proto_Uint8Array.concatAll([ Proto_Encode.unsignedVarint32(18), encodePageUrl(v.value0) ]);
          return Proto_Uint8Array.concatAll([ Proto_Encode.unsignedVarint32(Proto_Uint8Array.length(xs)), xs ]);
      };
      throw new Error("Failed pattern match at Pull (line 70, column 1 - line 70, column 41): " + [ v.constructor.name ]);
  };
  var encodePageSeo = function (msg) {
      var xs = Proto_Uint8Array.concatAll([ Proto_Encode.unsignedVarint32(10), Proto_Encode.string(msg.descr), Proto_Encode.unsignedVarint32(17), Proto_Encode["double"](msg.order) ]);
      return Proto_Uint8Array.concatAll([ Proto_Encode.unsignedVarint32(Proto_Uint8Array.length(xs)), xs ]);
  };
  var encodeSavePage = function (msg) {
      var xs = Proto_Uint8Array.concatAll([ Proto_Encode.unsignedVarint32(10), encodePageType(msg.tpe), Proto_Encode.unsignedVarint32(16), Proto_Encode["boolean"](msg.guest), Proto_Encode.unsignedVarint32(26), encodePageSeo(msg.seo), Data_Maybe.fromMaybe(Proto_Uint8Array.fromArray([  ]))(Data_Functor.map(Data_Maybe.functorMaybe)(function (x) {
          return Proto_Uint8Array.concatAll([ Proto_Encode.unsignedVarint32(34), encodePageSeo(x) ]);
      })(msg.mobileSeo)), Proto_Uint8Array.concatAll(Data_Array.concatMap(function (x) {
          return [ Proto_Encode.unsignedVarint32(42), encodeStringString(x) ];
      })(msg.name)) ]);
      return Proto_Uint8Array.concatAll([ Proto_Encode.unsignedVarint32(Proto_Uint8Array.length(xs)), xs ]);
  };
  var encodeGetSites = Proto_Encode.unsignedVarint32(0);
  var encodeFieldNode = function (v) {
      var xs = Proto_Uint8Array.concatAll([ Proto_Encode.unsignedVarint32(10), Proto_Encode.string(v.root), Proto_Uint8Array.concatAll(Data_Array.concatMap(function (x) {
          return [ Proto_Encode.unsignedVarint32(18), encodeFieldNode(x) ];
      })(v.forest)) ]);
      return Proto_Uint8Array.concatAll([ Proto_Encode.unsignedVarint32(Proto_Uint8Array.length(xs)), xs ]);
  };
  var encodeSaveComponentTemplate = function (msg) {
      var xs = Proto_Uint8Array.concatAll([ Proto_Encode.unsignedVarint32(10), encodeFieldNode(msg.fieldNode) ]);
      return Proto_Uint8Array.concatAll([ Proto_Encode.unsignedVarint32(Proto_Uint8Array.length(xs)), xs ]);
  };
  var encodeComponentsSavePrefs = function (msg) {
      var xs = Proto_Uint8Array.concatAll([ Proto_Encode.unsignedVarint32(10), Proto_Encode.string(msg.id), Proto_Encode.unsignedVarint32(18), Proto_Encode.string(msg.pageid), Proto_Encode.unsignedVarint32(26), Proto_Encode.string(msg.siteid), Proto_Encode.unsignedVarint32(34), encodeFieldNode(msg.tree), Data_Maybe.fromMaybe(Proto_Uint8Array.fromArray([  ]))(Data_Functor.map(Data_Maybe.functorMaybe)(function (x) {
          return Proto_Uint8Array.concatAll([ Proto_Encode.unsignedVarint32(42), encodeFieldNode(x) ]);
      })(msg.extTree)) ]);
      return Proto_Uint8Array.concatAll([ Proto_Encode.unsignedVarint32(Proto_Uint8Array.length(xs)), xs ]);
  };
  var encodePull = function (v) {
      if (v instanceof GetSites) {
          return Proto_Uint8Array.concatAll([ Proto_Encode.unsignedVarint32(8002), encodeGetSites ]);
      };
      if (v instanceof UploadChunk) {
          return Proto_Uint8Array.concatAll([ Proto_Encode.unsignedVarint32(8010), encodeUploadChunk(v.value0) ]);
      };
      if (v instanceof SavePage) {
          return Proto_Uint8Array.concatAll([ Proto_Encode.unsignedVarint32(8018), encodeSavePage(v.value0) ]);
      };
      if (v instanceof SaveComponentTemplate) {
          return Proto_Uint8Array.concatAll([ Proto_Encode.unsignedVarint32(11202), encodeSaveComponentTemplate(v.value0) ]);
      };
      if (v instanceof ComponentsSavePrefs) {
          return Proto_Uint8Array.concatAll([ Proto_Encode.unsignedVarint32(15362), encodeComponentsSavePrefs(v.value0) ]);
      };
      throw new Error("Failed pattern match at Pull (line 35, column 1 - line 35, column 33): " + [ v.constructor.name ]);
  };
  var defaultUploadChunk = {
      path: [  ]
  };
  var defaultSavePage = {
      mobileSeo: Data_Maybe.Nothing.value,
      name: [  ]
  };
  var defaultComponentsSavePrefs = {
      extTree: Data_Maybe.Nothing.value
  };
  exports["GetSites"] = GetSites;
  exports["UploadChunk"] = UploadChunk;
  exports["SavePage"] = SavePage;
  exports["SaveComponentTemplate"] = SaveComponentTemplate;
  exports["ComponentsSavePrefs"] = ComponentsSavePrefs;
  exports["defaultUploadChunk"] = defaultUploadChunk;
  exports["defaultSavePage"] = defaultSavePage;
  exports["defaultComponentsSavePrefs"] = defaultComponentsSavePrefs;
  exports["encodePull"] = encodePull;
  exports["eqPull"] = eqPull;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.7
  "use strict";
  $PS["Push"] = $PS["Push"] || {};
  var exports = $PS["Push"];
  var Common = $PS["Common"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_Rec_Class = $PS["Control.Monad.Rec.Class"];
  var Data_Array = $PS["Data.Array"];
  var Data_Either = $PS["Data.Either"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unit = $PS["Data.Unit"];
  var Proto_Decode = $PS["Proto.Decode"];                
  var FieldNode1 = function (x) {
      return x;
  };
  var SiteOpts = (function () {
      function SiteOpts(value0) {
          this.value0 = value0;
      };
      SiteOpts.create = function (value0) {
          return new SiteOpts(value0);
      };
      return SiteOpts;
  })();
  var Permissions = (function () {
      function Permissions(value0) {
          this.value0 = value0;
      };
      Permissions.create = function (value0) {
          return new Permissions(value0);
      };
      return Permissions;
  })();
  var Page = (function () {
      function Page(value0) {
          this.value0 = value0;
      };
      Page.create = function (value0) {
          return new Page(value0);
      };
      return Page;
  })();
  var PageTreeItem = (function () {
      function PageTreeItem(value0) {
          this.value0 = value0;
      };
      PageTreeItem.create = function (value0) {
          return new PageTreeItem(value0);
      };
      return PageTreeItem;
  })();
  var Ping = (function () {
      function Ping() {

      };
      Ping.value = new Ping();
      return Ping;
  })();
  var ComponentTemplateOk = (function () {
      function ComponentTemplateOk(value0) {
          this.value0 = value0;
      };
      ComponentTemplateOk.create = function (value0) {
          return new ComponentTemplateOk(value0);
      };
      return ComponentTemplateOk;
  })();
  var eqFieldNode1 = {
      eq: function (x) {
          return function (y) {
              return Data_Eq.eq(Data_Eq.eqArray(eqFieldNode1))(x.forest)(y.forest) && Data_Eq.eq(Data_Maybe.eqMaybe(Data_Eq.eqString))(x.root)(y.root);
          };
      }
  };
  var eqPush = {
      eq: function (x) {
          return function (y) {
              if (x instanceof SiteOpts && y instanceof SiteOpts) {
                  return Data_Eq.eq(Data_Eq.eqArray(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                      reflectSymbol: function () {
                          return "label";
                      }
                  })(Data_Maybe.eqMaybe(Data_Eq.eqString)))()({
                      reflectSymbol: function () {
                          return "id";
                      }
                  })(Data_Eq.eqString))))(x.value0.xs)(y.value0.xs);
              };
              if (x instanceof Permissions && y instanceof Permissions) {
                  return Data_Eq.eq(Data_Eq.eqArray(Data_Eq.eqString))(x.value0.xs)(y.value0.xs);
              };
              if (x instanceof Page && y instanceof Page) {
                  return x.value0.guest === y.value0.guest && Data_Eq.eq(Data_Maybe.eqMaybe(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                      reflectSymbol: function () {
                          return "order";
                      }
                  })(Data_Eq.eqNumber))()({
                      reflectSymbol: function () {
                          return "descr";
                      }
                  })(Data_Eq.eqString))))(x.value0.mobileSeo)(y.value0.mobileSeo) && Data_Eq.eq(Data_Eq.eqArray(Data_Tuple.eqTuple(Data_Eq.eqString)(Data_Eq.eqString)))(x.value0.name)(y.value0.name) && (x.value0.seo.descr === y.value0.seo.descr && x.value0.seo.order === y.value0.seo.order) && Data_Eq.eq(Common.eqPageType)(x.value0.tpe)(y.value0.tpe);
              };
              if (x instanceof PageTreeItem && y instanceof PageTreeItem) {
                  return x.value0.priority === y.value0.priority;
              };
              if (x instanceof Ping && y instanceof Ping) {
                  return true;
              };
              if (x instanceof ComponentTemplateOk && y instanceof ComponentTemplateOk) {
                  return Data_Eq.eq(Common.eqFieldNode)(x.value0.fieldNode)(y.value0.fieldNode) && Data_Eq.eq(eqFieldNode1)(x.value0.fieldNode1)(y.value0.fieldNode1);
              };
              return false;
          };
      }
  };
  var defaultSiteOpts = {
      xs: [  ]
  };
  var defaultSiteOpt = {
      label: Data_Maybe.Nothing.value
  };
  var defaultPermissions = {
      xs: [  ]
  };
  var defaultPage = {
      mobileSeo: Data_Maybe.Nothing.value,
      name: [  ]
  };
  var defaultFieldNode1 = {
      root: Data_Maybe.Nothing.value,
      forest: [  ]
  };
  var decodePing = function (_xs_) {
      return function (pos0) {
          return Control_Bind.bind(Data_Either.bindEither)(Proto_Decode.unsignedVarint32(_xs_)(pos0))(function (v) {
              return Control_Applicative.pure(Data_Either.applicativeEither)({
                  pos: v.pos + v.val | 0,
                  val: Data_Unit.unit
              });
          });
      };
  };
  var decodePageWidgets = function (_xs_) {
      return function (pos0) {
          return Control_Bind.bind(Data_Either.bindEither)(Proto_Decode.unsignedVarint32(_xs_)(pos0))(function (v) {
              return Control_Applicative.pure(Data_Either.applicativeEither)({
                  pos: v.pos + v.val | 0,
                  val: Data_Unit.unit
              });
          });
      };
  };
  var decodeFieldLoop = function (end) {
      return function (res) {
          return function (f) {
              return Data_Functor.map(Data_Either.functorEither)(function (v) {
                  return new Control_Monad_Rec_Class.Loop({
                      a: end,
                      b: f(v.val),
                      c: v.pos
                  });
              })(res);
          };
      };
  };
  var decodeFieldNode = function (_xs_) {
      return function (pos0) {
          var decode = function (end) {
              return function (acc) {
                  return function (pos1) {
                      if (pos1 < end) {
                          return Control_Bind.bind(Data_Either.bindEither)(Proto_Decode.unsignedVarint32(_xs_)(pos1))(function (v) {
                              var v1 = v.val >>> 3;
                              if (v1 === 1) {
                                  return decodeFieldLoop(end)(Proto_Decode.string(_xs_)(v.pos))(function (val) {
                                      return {
                                          root: new Data_Maybe.Just(val),
                                          forest: acc.forest
                                      };
                                  });
                              };
                              if (v1 === 2) {
                                  return decodeFieldLoop(end)(decodeFieldNode(_xs_)(v.pos))(function (val) {
                                      return {
                                          forest: Data_Array.snoc(acc.forest)(val),
                                          root: acc.root
                                      };
                                  });
                              };
                              return decodeFieldLoop(end)(Proto_Decode.skipType(_xs_)(v.pos)(v.val & 7))(function (v2) {
                                  return acc;
                              });
                          });
                      };
                      return Control_Applicative.pure(Data_Either.applicativeEither)(new Control_Monad_Rec_Class.Done({
                          pos: pos1,
                          val: acc
                      }));
                  };
              };
          };
          return Control_Bind.bind(Data_Either.bindEither)(Proto_Decode.unsignedVarint32(_xs_)(pos0))(function (v) {
              return Control_Bind.bind(Data_Either.bindEither)(Control_Monad_Rec_Class.tailRecM3(Control_Monad_Rec_Class.monadRecEither)(decode)(v.pos + v.val | 0)({
                  root: Data_Maybe.Nothing.value,
                  forest: [  ]
              })(v.pos))(function (v1) {
                  if (v1.val.root instanceof Data_Maybe.Just) {
                      return Control_Applicative.pure(Data_Either.applicativeEither)({
                          pos: v1.pos,
                          val: {
                              root: v1.val.root.value0,
                              forest: v1.val.forest
                          }
                      });
                  };
                  return new Data_Either.Left(new Proto_Decode.MissingFields("FieldNode"));
              });
          });
      };
  };
  var decodeFieldNode1 = function (_xs_) {
      return function (pos0) {
          var decode = function (end) {
              return function (v) {
                  return function (pos1) {
                      if (pos1 < end) {
                          return Control_Bind.bind(Data_Either.bindEither)(Proto_Decode.unsignedVarint32(_xs_)(pos1))(function (v1) {
                              var v2 = v1.val >>> 3;
                              if (v2 === 1) {
                                  return decodeFieldLoop(end)(Proto_Decode.string(_xs_)(v1.pos))(function (val) {
                                      return {
                                          root: new Data_Maybe.Just(val),
                                          forest: v.forest
                                      };
                                  });
                              };
                              if (v2 === 2) {
                                  return decodeFieldLoop(end)(decodeFieldNode1(_xs_)(v1.pos))(function (val) {
                                      return {
                                          root: v.root,
                                          forest: Data_Array.snoc(v.forest)(val)
                                      };
                                  });
                              };
                              return decodeFieldLoop(end)(Proto_Decode.skipType(_xs_)(v1.pos)(v1.val & 7))(function (v3) {
                                  return v;
                              });
                          });
                      };
                      return Control_Applicative.pure(Data_Either.applicativeEither)(new Control_Monad_Rec_Class.Done({
                          pos: pos1,
                          val: v
                      }));
                  };
              };
          };
          return Control_Bind.bind(Data_Either.bindEither)(Proto_Decode.unsignedVarint32(_xs_)(pos0))(function (v) {
              return Control_Monad_Rec_Class.tailRecM3(Control_Monad_Rec_Class.monadRecEither)(decode)(v.pos + v.val | 0)({
                  root: Data_Maybe.Nothing.value,
                  forest: [  ]
              })(v.pos);
          });
      };
  };
  var decodePageSeo = function (_xs_) {
      return function (pos0) {
          var decode = function (end) {
              return function (acc) {
                  return function (pos1) {
                      if (pos1 < end) {
                          return Control_Bind.bind(Data_Either.bindEither)(Proto_Decode.unsignedVarint32(_xs_)(pos1))(function (v) {
                              var v1 = v.val >>> 3;
                              if (v1 === 1) {
                                  return decodeFieldLoop(end)(Proto_Decode.string(_xs_)(v.pos))(function (val) {
                                      return {
                                          descr: new Data_Maybe.Just(val),
                                          order: acc.order
                                      };
                                  });
                              };
                              if (v1 === 2) {
                                  return decodeFieldLoop(end)(Proto_Decode["double"](_xs_)(v.pos))(function (val) {
                                      return {
                                          order: new Data_Maybe.Just(val),
                                          descr: acc.descr
                                      };
                                  });
                              };
                              return decodeFieldLoop(end)(Proto_Decode.skipType(_xs_)(v.pos)(v.val & 7))(function (v2) {
                                  return acc;
                              });
                          });
                      };
                      return Control_Applicative.pure(Data_Either.applicativeEither)(new Control_Monad_Rec_Class.Done({
                          pos: pos1,
                          val: acc
                      }));
                  };
              };
          };
          return Control_Bind.bind(Data_Either.bindEither)(Proto_Decode.unsignedVarint32(_xs_)(pos0))(function (v) {
              return Control_Bind.bind(Data_Either.bindEither)(Control_Monad_Rec_Class.tailRecM3(Control_Monad_Rec_Class.monadRecEither)(decode)(v.pos + v.val | 0)({
                  descr: Data_Maybe.Nothing.value,
                  order: Data_Maybe.Nothing.value
              })(v.pos))(function (v1) {
                  if (v1.val.descr instanceof Data_Maybe.Just && v1.val.order instanceof Data_Maybe.Just) {
                      return Control_Applicative.pure(Data_Either.applicativeEither)({
                          pos: v1.pos,
                          val: {
                              descr: v1.val.descr.value0,
                              order: v1.val.order.value0
                          }
                      });
                  };
                  return new Data_Either.Left(new Proto_Decode.MissingFields("PageSeo"));
              });
          });
      };
  };
  var decodePageTreeItem = function (_xs_) {
      return function (pos0) {
          var decode = function (end) {
              return function (acc) {
                  return function (pos1) {
                      if (pos1 < end) {
                          return Control_Bind.bind(Data_Either.bindEither)(Proto_Decode.unsignedVarint32(_xs_)(pos1))(function (v) {
                              var v1 = v.val >>> 3;
                              if (v1 === 1) {
                                  return decodeFieldLoop(end)(Proto_Decode.signedVarint32(_xs_)(v.pos))(function (val) {
                                      return {
                                          priority: new Data_Maybe.Just(val)
                                      };
                                  });
                              };
                              return decodeFieldLoop(end)(Proto_Decode.skipType(_xs_)(v.pos)(v.val & 7))(function (v2) {
                                  return acc;
                              });
                          });
                      };
                      return Control_Applicative.pure(Data_Either.applicativeEither)(new Control_Monad_Rec_Class.Done({
                          pos: pos1,
                          val: acc
                      }));
                  };
              };
          };
          return Control_Bind.bind(Data_Either.bindEither)(Proto_Decode.unsignedVarint32(_xs_)(pos0))(function (v) {
              return Control_Bind.bind(Data_Either.bindEither)(Control_Monad_Rec_Class.tailRecM3(Control_Monad_Rec_Class.monadRecEither)(decode)(v.pos + v.val | 0)({
                  priority: Data_Maybe.Nothing.value
              })(v.pos))(function (v1) {
                  if (v1.val.priority instanceof Data_Maybe.Just) {
                      return Control_Applicative.pure(Data_Either.applicativeEither)({
                          pos: v1.pos,
                          val: {
                              priority: v1.val.priority.value0
                          }
                      });
                  };
                  return new Data_Either.Left(new Proto_Decode.MissingFields("PageTreeItem"));
              });
          });
      };
  };
  var decodePageUrl = function (_xs_) {
      return function (pos0) {
          var decode = function (end) {
              return function (acc) {
                  return function (pos1) {
                      if (pos1 < end) {
                          return Control_Bind.bind(Data_Either.bindEither)(Proto_Decode.unsignedVarint32(_xs_)(pos1))(function (v) {
                              var v1 = v.val >>> 3;
                              if (v1 === 1) {
                                  return decodeFieldLoop(end)(Proto_Decode.string(_xs_)(v.pos))(function (val) {
                                      return {
                                          addr: new Data_Maybe.Just(val)
                                      };
                                  });
                              };
                              return decodeFieldLoop(end)(Proto_Decode.skipType(_xs_)(v.pos)(v.val & 7))(function (v2) {
                                  return acc;
                              });
                          });
                      };
                      return Control_Applicative.pure(Data_Either.applicativeEither)(new Control_Monad_Rec_Class.Done({
                          pos: pos1,
                          val: acc
                      }));
                  };
              };
          };
          return Control_Bind.bind(Data_Either.bindEither)(Proto_Decode.unsignedVarint32(_xs_)(pos0))(function (v) {
              return Control_Bind.bind(Data_Either.bindEither)(Control_Monad_Rec_Class.tailRecM3(Control_Monad_Rec_Class.monadRecEither)(decode)(v.pos + v.val | 0)({
                  addr: Data_Maybe.Nothing.value
              })(v.pos))(function (v1) {
                  if (v1.val.addr instanceof Data_Maybe.Just) {
                      return Control_Applicative.pure(Data_Either.applicativeEither)({
                          pos: v1.pos,
                          val: {
                              addr: v1.val.addr.value0
                          }
                      });
                  };
                  return new Data_Either.Left(new Proto_Decode.MissingFields("PageUrl"));
              });
          });
      };
  };
  var decodePageType = function (_xs_) {
      return function (pos0) {
          var decode = function (end) {
              return function (v) {
                  return function (pos1) {
                      if (pos1 < end) {
                          return Control_Bind.bind(Data_Either.bindEither)(Proto_Decode.unsignedVarint32(_xs_)(pos1))(function (v1) {
                              var v2 = v1.val >>> 3;
                              if (v2 === 1) {
                                  return decodeFieldLoop(end)(decodePageWidgets(_xs_)(v1.pos))(function (v3) {
                                      return new Data_Maybe.Just(Common.PageWidgets.value);
                                  });
                              };
                              if (v2 === 2) {
                                  return decodeFieldLoop(end)(decodePageUrl(_xs_)(v1.pos))(function ($316) {
                                      return Data_Maybe.Just.create(Common.PageUrl.create($316));
                                  });
                              };
                              return decodeFieldLoop(end)(Proto_Decode.skipType(_xs_)(v1.pos)(v1.val & 7))(function (v3) {
                                  return v;
                              });
                          });
                      };
                      if (v instanceof Data_Maybe.Just) {
                          return Control_Applicative.pure(Data_Either.applicativeEither)(new Control_Monad_Rec_Class.Done({
                              pos: pos1,
                              val: v.value0
                          }));
                      };
                      if (v instanceof Data_Maybe.Nothing) {
                          return new Data_Either.Left(new Proto_Decode.MissingFields("PageType"));
                      };
                      throw new Error("Failed pattern match at Push (line 145, column 5 - line 145, column 144): " + [ end.constructor.name, v.constructor.name, pos1.constructor.name ]);
                  };
              };
          };
          return Control_Bind.bind(Data_Either.bindEither)(Proto_Decode.unsignedVarint32(_xs_)(pos0))(function (v) {
              return Control_Monad_Rec_Class.tailRecM3(Control_Monad_Rec_Class.monadRecEither)(decode)(v.pos + v.val | 0)(Data_Maybe.Nothing.value)(v.pos);
          });
      };
  };
  var decodePermissions = function (_xs_) {
      return function (pos0) {
          var decode = function (end) {
              return function (acc) {
                  return function (pos1) {
                      if (pos1 < end) {
                          return Control_Bind.bind(Data_Either.bindEither)(Proto_Decode.unsignedVarint32(_xs_)(pos1))(function (v) {
                              var v1 = v.val >>> 3;
                              if (v1 === 1) {
                                  return decodeFieldLoop(end)(Proto_Decode.string(_xs_)(v.pos))(function (val) {
                                      return {
                                          xs: Data_Array.snoc(acc.xs)(val)
                                      };
                                  });
                              };
                              return decodeFieldLoop(end)(Proto_Decode.skipType(_xs_)(v.pos)(v.val & 7))(function (v2) {
                                  return acc;
                              });
                          });
                      };
                      return Control_Applicative.pure(Data_Either.applicativeEither)(new Control_Monad_Rec_Class.Done({
                          pos: pos1,
                          val: acc
                      }));
                  };
              };
          };
          return Control_Bind.bind(Data_Either.bindEither)(Proto_Decode.unsignedVarint32(_xs_)(pos0))(function (v) {
              return Control_Monad_Rec_Class.tailRecM3(Control_Monad_Rec_Class.monadRecEither)(decode)(v.pos + v.val | 0)({
                  xs: [  ]
              })(v.pos);
          });
      };
  };
  var decodeSiteOpt = function (_xs_) {
      return function (pos0) {
          var decode = function (end) {
              return function (acc) {
                  return function (pos1) {
                      if (pos1 < end) {
                          return Control_Bind.bind(Data_Either.bindEither)(Proto_Decode.unsignedVarint32(_xs_)(pos1))(function (v) {
                              var v1 = v.val >>> 3;
                              if (v1 === 1) {
                                  return decodeFieldLoop(end)(Proto_Decode.string(_xs_)(v.pos))(function (val) {
                                      return {
                                          id: new Data_Maybe.Just(val),
                                          label: acc.label
                                      };
                                  });
                              };
                              if (v1 === 2) {
                                  return decodeFieldLoop(end)(Proto_Decode.string(_xs_)(v.pos))(function (val) {
                                      return {
                                          label: new Data_Maybe.Just(val),
                                          id: acc.id
                                      };
                                  });
                              };
                              return decodeFieldLoop(end)(Proto_Decode.skipType(_xs_)(v.pos)(v.val & 7))(function (v2) {
                                  return acc;
                              });
                          });
                      };
                      return Control_Applicative.pure(Data_Either.applicativeEither)(new Control_Monad_Rec_Class.Done({
                          pos: pos1,
                          val: acc
                      }));
                  };
              };
          };
          return Control_Bind.bind(Data_Either.bindEither)(Proto_Decode.unsignedVarint32(_xs_)(pos0))(function (v) {
              return Control_Bind.bind(Data_Either.bindEither)(Control_Monad_Rec_Class.tailRecM3(Control_Monad_Rec_Class.monadRecEither)(decode)(v.pos + v.val | 0)({
                  id: Data_Maybe.Nothing.value,
                  label: Data_Maybe.Nothing.value
              })(v.pos))(function (v1) {
                  if (v1.val.id instanceof Data_Maybe.Just) {
                      return Control_Applicative.pure(Data_Either.applicativeEither)({
                          pos: v1.pos,
                          val: {
                              id: v1.val.id.value0,
                              label: v1.val.label
                          }
                      });
                  };
                  return new Data_Either.Left(new Proto_Decode.MissingFields("SiteOpt"));
              });
          });
      };
  };
  var decodeSiteOpts = function (_xs_) {
      return function (pos0) {
          var decode = function (end) {
              return function (acc) {
                  return function (pos1) {
                      if (pos1 < end) {
                          return Control_Bind.bind(Data_Either.bindEither)(Proto_Decode.unsignedVarint32(_xs_)(pos1))(function (v) {
                              var v1 = v.val >>> 3;
                              if (v1 === 1) {
                                  return decodeFieldLoop(end)(decodeSiteOpt(_xs_)(v.pos))(function (val) {
                                      return {
                                          xs: Data_Array.snoc(acc.xs)(val)
                                      };
                                  });
                              };
                              return decodeFieldLoop(end)(Proto_Decode.skipType(_xs_)(v.pos)(v.val & 7))(function (v2) {
                                  return acc;
                              });
                          });
                      };
                      return Control_Applicative.pure(Data_Either.applicativeEither)(new Control_Monad_Rec_Class.Done({
                          pos: pos1,
                          val: acc
                      }));
                  };
              };
          };
          return Control_Bind.bind(Data_Either.bindEither)(Proto_Decode.unsignedVarint32(_xs_)(pos0))(function (v) {
              return Control_Monad_Rec_Class.tailRecM3(Control_Monad_Rec_Class.monadRecEither)(decode)(v.pos + v.val | 0)({
                  xs: [  ]
              })(v.pos);
          });
      };
  };
  var decodeStringString = function (_xs_) {
      return function (pos0) {
          var decode = function (end) {
              return function (acc) {
                  return function (pos1) {
                      if (pos1 < end) {
                          return Control_Bind.bind(Data_Either.bindEither)(Proto_Decode.unsignedVarint32(_xs_)(pos1))(function (v) {
                              var v1 = v.val >>> 3;
                              if (v1 === 1) {
                                  return decodeFieldLoop(end)(Proto_Decode.string(_xs_)(v.pos))(function (val) {
                                      return {
                                          first: new Data_Maybe.Just(val),
                                          second: acc.second
                                      };
                                  });
                              };
                              if (v1 === 2) {
                                  return decodeFieldLoop(end)(Proto_Decode.string(_xs_)(v.pos))(function (val) {
                                      return {
                                          second: new Data_Maybe.Just(val),
                                          first: acc.first
                                      };
                                  });
                              };
                              return decodeFieldLoop(end)(Proto_Decode.skipType(_xs_)(v.pos)(v.val & 7))(function (v2) {
                                  return acc;
                              });
                          });
                      };
                      return Control_Applicative.pure(Data_Either.applicativeEither)(new Control_Monad_Rec_Class.Done({
                          pos: pos1,
                          val: acc
                      }));
                  };
              };
          };
          return Control_Bind.bind(Data_Either.bindEither)(Proto_Decode.unsignedVarint32(_xs_)(pos0))(function (v) {
              return Control_Bind.bind(Data_Either.bindEither)(Control_Monad_Rec_Class.tailRecM3(Control_Monad_Rec_Class.monadRecEither)(decode)(v.pos + v.val | 0)({
                  first: Data_Maybe.Nothing.value,
                  second: Data_Maybe.Nothing.value
              })(v.pos))(function (v1) {
                  if (v1.val.first instanceof Data_Maybe.Just && v1.val.second instanceof Data_Maybe.Just) {
                      return Control_Applicative.pure(Data_Either.applicativeEither)({
                          pos: v1.pos,
                          val: new Data_Tuple.Tuple(v1.val.first.value0, v1.val.second.value0)
                      });
                  };
                  return new Data_Either.Left(new Proto_Decode.MissingFields("decodeStringString"));
              });
          });
      };
  };
  var decodePage = function (_xs_) {
      return function (pos0) {
          var decode = function (end) {
              return function (acc) {
                  return function (pos1) {
                      if (pos1 < end) {
                          return Control_Bind.bind(Data_Either.bindEither)(Proto_Decode.unsignedVarint32(_xs_)(pos1))(function (v) {
                              var v1 = v.val >>> 3;
                              if (v1 === 1) {
                                  return decodeFieldLoop(end)(decodePageType(_xs_)(v.pos))(function (val) {
                                      return {
                                          tpe: new Data_Maybe.Just(val),
                                          guest: acc.guest,
                                          mobileSeo: acc.mobileSeo,
                                          name: acc.name,
                                          seo: acc.seo
                                      };
                                  });
                              };
                              if (v1 === 2) {
                                  return decodeFieldLoop(end)(Proto_Decode["boolean"](_xs_)(v.pos))(function (val) {
                                      return {
                                          guest: new Data_Maybe.Just(val),
                                          mobileSeo: acc.mobileSeo,
                                          name: acc.name,
                                          seo: acc.seo,
                                          tpe: acc.tpe
                                      };
                                  });
                              };
                              if (v1 === 3) {
                                  return decodeFieldLoop(end)(decodePageSeo(_xs_)(v.pos))(function (val) {
                                      return {
                                          seo: new Data_Maybe.Just(val),
                                          guest: acc.guest,
                                          mobileSeo: acc.mobileSeo,
                                          name: acc.name,
                                          tpe: acc.tpe
                                      };
                                  });
                              };
                              if (v1 === 4) {
                                  return decodeFieldLoop(end)(decodePageSeo(_xs_)(v.pos))(function (val) {
                                      return {
                                          mobileSeo: new Data_Maybe.Just(val),
                                          guest: acc.guest,
                                          name: acc.name,
                                          seo: acc.seo,
                                          tpe: acc.tpe
                                      };
                                  });
                              };
                              if (v1 === 5) {
                                  return decodeFieldLoop(end)(decodeStringString(_xs_)(v.pos))(function (val) {
                                      return {
                                          name: Data_Array.snoc(acc.name)(val),
                                          guest: acc.guest,
                                          mobileSeo: acc.mobileSeo,
                                          seo: acc.seo,
                                          tpe: acc.tpe
                                      };
                                  });
                              };
                              return decodeFieldLoop(end)(Proto_Decode.skipType(_xs_)(v.pos)(v.val & 7))(function (v2) {
                                  return acc;
                              });
                          });
                      };
                      return Control_Applicative.pure(Data_Either.applicativeEither)(new Control_Monad_Rec_Class.Done({
                          pos: pos1,
                          val: acc
                      }));
                  };
              };
          };
          return Control_Bind.bind(Data_Either.bindEither)(Proto_Decode.unsignedVarint32(_xs_)(pos0))(function (v) {
              return Control_Bind.bind(Data_Either.bindEither)(Control_Monad_Rec_Class.tailRecM3(Control_Monad_Rec_Class.monadRecEither)(decode)(v.pos + v.val | 0)({
                  tpe: Data_Maybe.Nothing.value,
                  guest: Data_Maybe.Nothing.value,
                  seo: Data_Maybe.Nothing.value,
                  mobileSeo: Data_Maybe.Nothing.value,
                  name: [  ]
              })(v.pos))(function (v1) {
                  if (v1.val.tpe instanceof Data_Maybe.Just && (v1.val.guest instanceof Data_Maybe.Just && v1.val.seo instanceof Data_Maybe.Just)) {
                      return Control_Applicative.pure(Data_Either.applicativeEither)({
                          pos: v1.pos,
                          val: {
                              tpe: v1.val.tpe.value0,
                              guest: v1.val.guest.value0,
                              seo: v1.val.seo.value0,
                              mobileSeo: v1.val.mobileSeo,
                              name: v1.val.name
                          }
                      });
                  };
                  return new Data_Either.Left(new Proto_Decode.MissingFields("Page"));
              });
          });
      };
  };
  var decodeComponentTemplateOk = function (_xs_) {
      return function (pos0) {
          var decode = function (end) {
              return function (acc) {
                  return function (pos1) {
                      if (pos1 < end) {
                          return Control_Bind.bind(Data_Either.bindEither)(Proto_Decode.unsignedVarint32(_xs_)(pos1))(function (v) {
                              var v1 = v.val >>> 3;
                              if (v1 === 1) {
                                  return decodeFieldLoop(end)(decodeFieldNode(_xs_)(v.pos))(function (val) {
                                      return {
                                          fieldNode: new Data_Maybe.Just(val),
                                          fieldNode1: acc.fieldNode1
                                      };
                                  });
                              };
                              if (v1 === 2) {
                                  return decodeFieldLoop(end)(decodeFieldNode1(_xs_)(v.pos))(function (val) {
                                      return {
                                          fieldNode1: new Data_Maybe.Just(val),
                                          fieldNode: acc.fieldNode
                                      };
                                  });
                              };
                              return decodeFieldLoop(end)(Proto_Decode.skipType(_xs_)(v.pos)(v.val & 7))(function (v2) {
                                  return acc;
                              });
                          });
                      };
                      return Control_Applicative.pure(Data_Either.applicativeEither)(new Control_Monad_Rec_Class.Done({
                          pos: pos1,
                          val: acc
                      }));
                  };
              };
          };
          return Control_Bind.bind(Data_Either.bindEither)(Proto_Decode.unsignedVarint32(_xs_)(pos0))(function (v) {
              return Control_Bind.bind(Data_Either.bindEither)(Control_Monad_Rec_Class.tailRecM3(Control_Monad_Rec_Class.monadRecEither)(decode)(v.pos + v.val | 0)({
                  fieldNode: Data_Maybe.Nothing.value,
                  fieldNode1: Data_Maybe.Nothing.value
              })(v.pos))(function (v1) {
                  if (v1.val.fieldNode instanceof Data_Maybe.Just && v1.val.fieldNode1 instanceof Data_Maybe.Just) {
                      return Control_Applicative.pure(Data_Either.applicativeEither)({
                          pos: v1.pos,
                          val: {
                              fieldNode: v1.val.fieldNode.value0,
                              fieldNode1: v1.val.fieldNode1.value0
                          }
                      });
                  };
                  return new Data_Either.Left(new Proto_Decode.MissingFields("ComponentTemplateOk"));
              });
          });
      };
  };
  var decodePush = function (_xs_) {
      var decode = function (res) {
          return function (f) {
              return Data_Functor.map(Data_Either.functorEither)(function (v) {
                  return {
                      pos: v.pos,
                      val: f(v.val)
                  };
              })(res);
          };
      };
      return Control_Bind.bind(Data_Either.bindEither)(Proto_Decode.unsignedVarint32(_xs_)(0))(function (v) {
          var v1 = v.val >>> 3;
          if (v1 === 1) {
              return decode(decodeSiteOpts(_xs_)(v.pos))(SiteOpts.create);
          };
          if (v1 === 2) {
              return decode(decodePermissions(_xs_)(v.pos))(Permissions.create);
          };
          if (v1 === 3) {
              return decode(decodePage(_xs_)(v.pos))(Page.create);
          };
          if (v1 === 4) {
              return decode(decodePageTreeItem(_xs_)(v.pos))(PageTreeItem.create);
          };
          if (v1 === 5) {
              return decode(decodePing(_xs_)(v.pos))(function (v2) {
                  return Ping.value;
              });
          };
          if (v1 === 1300) {
              return decode(decodeComponentTemplateOk(_xs_)(v.pos))(ComponentTemplateOk.create);
          };
          return new Data_Either.Left(new Proto_Decode.BadType(v1));
      });
  };
  exports["SiteOpts"] = SiteOpts;
  exports["Permissions"] = Permissions;
  exports["Page"] = Page;
  exports["PageTreeItem"] = PageTreeItem;
  exports["Ping"] = Ping;
  exports["ComponentTemplateOk"] = ComponentTemplateOk;
  exports["defaultSiteOpts"] = defaultSiteOpts;
  exports["defaultSiteOpt"] = defaultSiteOpt;
  exports["defaultPermissions"] = defaultPermissions;
  exports["defaultPage"] = defaultPage;
  exports["FieldNode1"] = FieldNode1;
  exports["defaultFieldNode1"] = defaultFieldNode1;
  exports["decodePush"] = decodePush;
  exports["eqPush"] = eqPush;
  exports["eqFieldNode1"] = eqFieldNode1;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.7
  "use strict";
  $PS["SetMap.Common"] = $PS["SetMap.Common"] || {};
  var exports = $PS["SetMap.Common"];
  var Prod = (function () {
      function Prod() {

      };
      Prod.value = new Prod();
      return Prod;
  })();
  var Dev = (function () {
      function Dev() {

      };
      Dev.value = new Dev();
      return Dev;
  })();
  var eqStepId = {
      eq: function (x) {
          return function (y) {
              if (x instanceof Prod && y instanceof Prod) {
                  return true;
              };
              if (x instanceof Dev && y instanceof Dev) {
                  return true;
              };
              return false;
          };
      }
  };
  exports["Prod"] = Prod;
  exports["Dev"] = Dev;
  exports["eqStepId"] = eqStepId;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.7
  "use strict";
  $PS["SetMap.Pull"] = $PS["SetMap.Pull"] || {};
  var exports = $PS["SetMap.Pull"];
  var Data_Array = $PS["Data.Array"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Proto_Encode = $PS["Proto.Encode"];
  var Proto_Uint8Array = $PS["Proto.Uint8Array"];
  var SetMap_Common = $PS["SetMap.Common"];                
  var Flow1 = (function () {
      function Flow1(value0) {
          this.value0 = value0;
      };
      Flow1.create = function (value0) {
          return new Flow1(value0);
      };
      return Flow1;
  })();
  var Flow2 = (function () {
      function Flow2(value0) {
          this.value0 = value0;
      };
      Flow2.create = function (value0) {
          return new Flow2(value0);
      };
      return Flow2;
  })();
  var eqPull = {
      eq: function (x) {
          return function (y) {
              if (x instanceof Flow1 && y instanceof Flow1) {
                  return Data_Eq.eq(Data_Eq.eqArray(Data_Tuple.eqTuple(Data_Eq.eqString)(Data_Eq.eqArray(Data_Eq.eqString))))(x.value0.graph)(y.value0.graph);
              };
              if (x instanceof Flow2 && y instanceof Flow2) {
                  return Data_Eq.eq(Data_Eq.eqArray(Data_Tuple.eqTuple(SetMap_Common.eqStepId)(Data_Eq.eqArray(SetMap_Common.eqStepId))))(x.value0.graph)(y.value0.graph);
              };
              return false;
          };
      }
  };
  var encodeStringArrayString = function (v) {
      var msg = {
          "_1": v.value0,
          "_2": v.value1
      };
      var xs = Proto_Uint8Array.concatAll([ Proto_Encode.unsignedVarint32(10), Proto_Encode.string(msg["_1"]), Proto_Uint8Array.concatAll(Data_Array.concatMap(function (x) {
          return [ Proto_Encode.unsignedVarint32(18), Proto_Encode.string(x) ];
      })(msg["_2"])) ]);
      return Proto_Uint8Array.concatAll([ Proto_Encode.unsignedVarint32(Proto_Uint8Array.length(xs)), xs ]);
  };
  var encodeProd = Proto_Encode.unsignedVarint32(0);
  var encodeFlow1 = function (msg) {
      var xs = Proto_Uint8Array.concatAll([ Proto_Uint8Array.concatAll(Data_Array.concatMap(function (x) {
          return [ Proto_Encode.unsignedVarint32(10), encodeStringArrayString(x) ];
      })(msg.graph)) ]);
      return Proto_Uint8Array.concatAll([ Proto_Encode.unsignedVarint32(Proto_Uint8Array.length(xs)), xs ]);
  };
  var encodeDev = Proto_Encode.unsignedVarint32(0);
  var encodeStepId = function (v) {
      if (v instanceof SetMap_Common.Prod) {
          var xs = Proto_Uint8Array.concatAll([ Proto_Encode.unsignedVarint32(10), encodeProd ]);
          return Proto_Uint8Array.concatAll([ Proto_Encode.unsignedVarint32(Proto_Uint8Array.length(xs)), xs ]);
      };
      if (v instanceof SetMap_Common.Dev) {
          var xs = Proto_Uint8Array.concatAll([ Proto_Encode.unsignedVarint32(18), encodeDev ]);
          return Proto_Uint8Array.concatAll([ Proto_Encode.unsignedVarint32(Proto_Uint8Array.length(xs)), xs ]);
      };
      throw new Error("Failed pattern match at SetMap.Pull (line 55, column 1 - line 55, column 37): " + [ v.constructor.name ]);
  };
  var encodeStepIdArrayStepId = function (v) {
      var msg = {
          "_1": v.value0,
          "_2": v.value1
      };
      var xs = Proto_Uint8Array.concatAll([ Proto_Encode.unsignedVarint32(10), encodeStepId(msg["_1"]), Proto_Uint8Array.concatAll(Data_Array.concatMap(function (x) {
          return [ Proto_Encode.unsignedVarint32(18), encodeStepId(x) ];
      })(msg["_2"])) ]);
      return Proto_Uint8Array.concatAll([ Proto_Encode.unsignedVarint32(Proto_Uint8Array.length(xs)), xs ]);
  };
  var encodeFlow2 = function (msg) {
      var xs = Proto_Uint8Array.concatAll([ Proto_Uint8Array.concatAll(Data_Array.concatMap(function (x) {
          return [ Proto_Encode.unsignedVarint32(10), encodeStepIdArrayStepId(x) ];
      })(msg.graph)) ]);
      return Proto_Uint8Array.concatAll([ Proto_Encode.unsignedVarint32(Proto_Uint8Array.length(xs)), xs ]);
  };
  var encodePull = function (v) {
      if (v instanceof Flow1) {
          return Proto_Uint8Array.concatAll([ Proto_Encode.unsignedVarint32(10), encodeFlow1(v.value0) ]);
      };
      if (v instanceof Flow2) {
          return Proto_Uint8Array.concatAll([ Proto_Encode.unsignedVarint32(18), encodeFlow2(v.value0) ]);
      };
      throw new Error("Failed pattern match at SetMap.Pull (line 17, column 1 - line 17, column 33): " + [ v.constructor.name ]);
  };
  exports["Flow1"] = Flow1;
  exports["Flow2"] = Flow2;
  exports["encodePull"] = encodePull;
  exports["eqPull"] = eqPull;
})(PS);
(function($PS) {
  // Generated by purs version 0.14.7
  "use strict";
  $PS["SetMap.Push"] = $PS["SetMap.Push"] || {};
  var exports = $PS["SetMap.Push"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_Rec_Class = $PS["Control.Monad.Rec.Class"];
  var Data_Array = $PS["Data.Array"];
  var Data_Either = $PS["Data.Either"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unit = $PS["Data.Unit"];
  var Proto_Decode = $PS["Proto.Decode"];
  var SetMap_Common = $PS["SetMap.Common"];                
  var Flow1 = (function () {
      function Flow1(value0) {
          this.value0 = value0;
      };
      Flow1.create = function (value0) {
          return new Flow1(value0);
      };
      return Flow1;
  })();
  var Flow2 = (function () {
      function Flow2(value0) {
          this.value0 = value0;
      };
      Flow2.create = function (value0) {
          return new Flow2(value0);
      };
      return Flow2;
  })();
  var eqPush = {
      eq: function (x) {
          return function (y) {
              if (x instanceof Flow1 && y instanceof Flow1) {
                  return Data_Eq.eq(Data_Eq.eqArray(Data_Tuple.eqTuple(Data_Eq.eqString)(Data_Eq.eqArray(Data_Eq.eqString))))(x.value0.graph)(y.value0.graph);
              };
              if (x instanceof Flow2 && y instanceof Flow2) {
                  return Data_Eq.eq(Data_Eq.eqArray(Data_Tuple.eqTuple(SetMap_Common.eqStepId)(Data_Eq.eqArray(SetMap_Common.eqStepId))))(x.value0.graph)(y.value0.graph);
              };
              return false;
          };
      }
  };
  var decodeProd = function (_xs_) {
      return function (pos0) {
          return Control_Bind.bind(Data_Either.bindEither)(Proto_Decode.unsignedVarint32(_xs_)(pos0))(function (v) {
              return Control_Applicative.pure(Data_Either.applicativeEither)({
                  pos: v.pos + v.val | 0,
                  val: Data_Unit.unit
              });
          });
      };
  };
  var decodeFieldLoop = function (end) {
      return function (res) {
          return function (f) {
              return Data_Functor.map(Data_Either.functorEither)(function (v) {
                  return new Control_Monad_Rec_Class.Loop({
                      a: end,
                      b: f(v.val),
                      c: v.pos
                  });
              })(res);
          };
      };
  };
  var decodeStringArrayString = function (_xs_) {
      return function (pos0) {
          var decode = function (end) {
              return function (acc) {
                  return function (pos1) {
                      if (pos1 < end) {
                          return Control_Bind.bind(Data_Either.bindEither)(Proto_Decode.unsignedVarint32(_xs_)(pos1))(function (v) {
                              var v1 = v.val >>> 3;
                              if (v1 === 1) {
                                  return decodeFieldLoop(end)(Proto_Decode.string(_xs_)(v.pos))(function (val) {
                                      return {
                                          first: new Data_Maybe.Just(val),
                                          second: acc.second
                                      };
                                  });
                              };
                              if (v1 === 2) {
                                  return decodeFieldLoop(end)(Proto_Decode.string(_xs_)(v.pos))(function (val) {
                                      return {
                                          second: Data_Array.snoc(acc.second)(val),
                                          first: acc.first
                                      };
                                  });
                              };
                              return decodeFieldLoop(end)(Proto_Decode.skipType(_xs_)(v.pos)(v.val & 7))(function (v2) {
                                  return acc;
                              });
                          });
                      };
                      return Control_Applicative.pure(Data_Either.applicativeEither)(new Control_Monad_Rec_Class.Done({
                          pos: pos1,
                          val: acc
                      }));
                  };
              };
          };
          return Control_Bind.bind(Data_Either.bindEither)(Proto_Decode.unsignedVarint32(_xs_)(pos0))(function (v) {
              return Control_Bind.bind(Data_Either.bindEither)(Control_Monad_Rec_Class.tailRecM3(Control_Monad_Rec_Class.monadRecEither)(decode)(v.pos + v.val | 0)({
                  first: Data_Maybe.Nothing.value,
                  second: [  ]
              })(v.pos))(function (v1) {
                  if (v1.val.first instanceof Data_Maybe.Just) {
                      return Control_Applicative.pure(Data_Either.applicativeEither)({
                          pos: v1.pos,
                          val: new Data_Tuple.Tuple(v1.val.first.value0, v1.val.second)
                      });
                  };
                  return new Data_Either.Left(new Proto_Decode.MissingFields("decodeStringArrayString"));
              });
          });
      };
  };
  var decodeFlow1 = function (_xs_) {
      return function (pos0) {
          var decode = function (end) {
              return function (acc) {
                  return function (pos1) {
                      if (pos1 < end) {
                          return Control_Bind.bind(Data_Either.bindEither)(Proto_Decode.unsignedVarint32(_xs_)(pos1))(function (v) {
                              var v1 = v.val >>> 3;
                              if (v1 === 1) {
                                  return decodeFieldLoop(end)(decodeStringArrayString(_xs_)(v.pos))(function (val) {
                                      return {
                                          graph: Data_Array.snoc(acc.graph)(val)
                                      };
                                  });
                              };
                              return decodeFieldLoop(end)(Proto_Decode.skipType(_xs_)(v.pos)(v.val & 7))(function (v2) {
                                  return acc;
                              });
                          });
                      };
                      return Control_Applicative.pure(Data_Either.applicativeEither)(new Control_Monad_Rec_Class.Done({
                          pos: pos1,
                          val: acc
                      }));
                  };
              };
          };
          return Control_Bind.bind(Data_Either.bindEither)(Proto_Decode.unsignedVarint32(_xs_)(pos0))(function (v) {
              return Control_Monad_Rec_Class.tailRecM3(Control_Monad_Rec_Class.monadRecEither)(decode)(v.pos + v.val | 0)({
                  graph: [  ]
              })(v.pos);
          });
      };
  };
  var decodeDev = function (_xs_) {
      return function (pos0) {
          return Control_Bind.bind(Data_Either.bindEither)(Proto_Decode.unsignedVarint32(_xs_)(pos0))(function (v) {
              return Control_Applicative.pure(Data_Either.applicativeEither)({
                  pos: v.pos + v.val | 0,
                  val: Data_Unit.unit
              });
          });
      };
  };
  var decodeStepId = function (_xs_) {
      return function (pos0) {
          var decode = function (end) {
              return function (v) {
                  return function (pos1) {
                      if (pos1 < end) {
                          return Control_Bind.bind(Data_Either.bindEither)(Proto_Decode.unsignedVarint32(_xs_)(pos1))(function (v1) {
                              var v2 = v1.val >>> 3;
                              if (v2 === 1) {
                                  return decodeFieldLoop(end)(decodeProd(_xs_)(v1.pos))(function (v3) {
                                      return new Data_Maybe.Just(SetMap_Common.Prod.value);
                                  });
                              };
                              if (v2 === 2) {
                                  return decodeFieldLoop(end)(decodeDev(_xs_)(v1.pos))(function (v3) {
                                      return new Data_Maybe.Just(SetMap_Common.Dev.value);
                                  });
                              };
                              return decodeFieldLoop(end)(Proto_Decode.skipType(_xs_)(v1.pos)(v1.val & 7))(function (v3) {
                                  return v;
                              });
                          });
                      };
                      if (v instanceof Data_Maybe.Just) {
                          return Control_Applicative.pure(Data_Either.applicativeEither)(new Control_Monad_Rec_Class.Done({
                              pos: pos1,
                              val: v.value0
                          }));
                      };
                      if (v instanceof Data_Maybe.Nothing) {
                          return new Data_Either.Left(new Proto_Decode.MissingFields("StepId"));
                      };
                      throw new Error("Failed pattern match at SetMap.Push (line 101, column 5 - line 101, column 138): " + [ end.constructor.name, v.constructor.name, pos1.constructor.name ]);
                  };
              };
          };
          return Control_Bind.bind(Data_Either.bindEither)(Proto_Decode.unsignedVarint32(_xs_)(pos0))(function (v) {
              return Control_Monad_Rec_Class.tailRecM3(Control_Monad_Rec_Class.monadRecEither)(decode)(v.pos + v.val | 0)(Data_Maybe.Nothing.value)(v.pos);
          });
      };
  };
  var decodeStepIdArrayStepId = function (_xs_) {
      return function (pos0) {
          var decode = function (end) {
              return function (acc) {
                  return function (pos1) {
                      if (pos1 < end) {
                          return Control_Bind.bind(Data_Either.bindEither)(Proto_Decode.unsignedVarint32(_xs_)(pos1))(function (v) {
                              var v1 = v.val >>> 3;
                              if (v1 === 1) {
                                  return decodeFieldLoop(end)(decodeStepId(_xs_)(v.pos))(function (val) {
                                      return {
                                          first: new Data_Maybe.Just(val),
                                          second: acc.second
                                      };
                                  });
                              };
                              if (v1 === 2) {
                                  return decodeFieldLoop(end)(decodeStepId(_xs_)(v.pos))(function (val) {
                                      return {
                                          second: Data_Array.snoc(acc.second)(val),
                                          first: acc.first
                                      };
                                  });
                              };
                              return decodeFieldLoop(end)(Proto_Decode.skipType(_xs_)(v.pos)(v.val & 7))(function (v2) {
                                  return acc;
                              });
                          });
                      };
                      return Control_Applicative.pure(Data_Either.applicativeEither)(new Control_Monad_Rec_Class.Done({
                          pos: pos1,
                          val: acc
                      }));
                  };
              };
          };
          return Control_Bind.bind(Data_Either.bindEither)(Proto_Decode.unsignedVarint32(_xs_)(pos0))(function (v) {
              return Control_Bind.bind(Data_Either.bindEither)(Control_Monad_Rec_Class.tailRecM3(Control_Monad_Rec_Class.monadRecEither)(decode)(v.pos + v.val | 0)({
                  first: Data_Maybe.Nothing.value,
                  second: [  ]
              })(v.pos))(function (v1) {
                  if (v1.val.first instanceof Data_Maybe.Just) {
                      return Control_Applicative.pure(Data_Either.applicativeEither)({
                          pos: v1.pos,
                          val: new Data_Tuple.Tuple(v1.val.first.value0, v1.val.second)
                      });
                  };
                  return new Data_Either.Left(new Proto_Decode.MissingFields("decodeStepIdArrayStepId"));
              });
          });
      };
  };
  var decodeFlow2 = function (_xs_) {
      return function (pos0) {
          var decode = function (end) {
              return function (acc) {
                  return function (pos1) {
                      if (pos1 < end) {
                          return Control_Bind.bind(Data_Either.bindEither)(Proto_Decode.unsignedVarint32(_xs_)(pos1))(function (v) {
                              var v1 = v.val >>> 3;
                              if (v1 === 1) {
                                  return decodeFieldLoop(end)(decodeStepIdArrayStepId(_xs_)(v.pos))(function (val) {
                                      return {
                                          graph: Data_Array.snoc(acc.graph)(val)
                                      };
                                  });
                              };
                              return decodeFieldLoop(end)(Proto_Decode.skipType(_xs_)(v.pos)(v.val & 7))(function (v2) {
                                  return acc;
                              });
                          });
                      };
                      return Control_Applicative.pure(Data_Either.applicativeEither)(new Control_Monad_Rec_Class.Done({
                          pos: pos1,
                          val: acc
                      }));
                  };
              };
          };
          return Control_Bind.bind(Data_Either.bindEither)(Proto_Decode.unsignedVarint32(_xs_)(pos0))(function (v) {
              return Control_Monad_Rec_Class.tailRecM3(Control_Monad_Rec_Class.monadRecEither)(decode)(v.pos + v.val | 0)({
                  graph: [  ]
              })(v.pos);
          });
      };
  };
  var decodePush = function (_xs_) {
      var decode = function (res) {
          return function (f) {
              return Data_Functor.map(Data_Either.functorEither)(function (v) {
                  return {
                      pos: v.pos,
                      val: f(v.val)
                  };
              })(res);
          };
      };
      return Control_Bind.bind(Data_Either.bindEither)(Proto_Decode.unsignedVarint32(_xs_)(0))(function (v) {
          var v1 = v.val >>> 3;
          if (v1 === 1) {
              return decode(decodeFlow1(_xs_)(v.pos))(Flow1.create);
          };
          if (v1 === 2) {
              return decode(decodeFlow2(_xs_)(v.pos))(Flow2.create);
          };
          return new Data_Either.Left(new Proto_Decode.BadType(v1));
      });
  };
  exports["Flow1"] = Flow1;
  exports["Flow2"] = Flow2;
  exports["decodePush"] = decodePush;
  exports["eqPush"] = eqPush;
})(PS);